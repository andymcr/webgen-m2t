[comment encoding = UTF-8 /]
[module uriRoutes(
	'http://www.cs.man.ac.uk/mdsd/2010/ObjectRelationalMapping',
	'http://www.cs.man.ac.uk/mdsd/2015/WebApplicationFramework')]
[import uk::ac::man::cs::mdsd::orm::m2t::core::featureProperties/]
[import uk::ac::man::cs::mdsd::waf::m2t::core::featureProperties/]


[query public uriPathKeys(entityOrView : EntityOrView) : Sequence(Attribute)
	= let localKeys : Sequence(Attribute) = entityOrView.attributeKeys()
		in if entityOrView.isContained() then
			let parentKeys : Sequence(Attribute) = entityOrView.container().uriPathKeys()
				in if localKeys->isEmpty() then
						parentKeys
					else if parentKeys->isEmpty() then
						localKeys
					else
						localKeys->iterate(k; j : Sequence(Attribute) = parentKeys | j->append(k))
					endif endif
			else
				localKeys
			endif
/]

[query public keyEntity(entityOrView : EntityOrView) : EntityOrView
	= if entityOrView.attributeKeys()->notEmpty() then
			entityOrView
		else if entityOrView.isContained() then
			entityOrView.container().keyEntity()
		else
			null
		endif endif
/]

[query private parentUriPathKeys(entityOrView : EntityOrView) : Sequence(Attribute)
	= let keyEntity : EntityOrView
		= entityOrView.keyEntity()
		in if keyEntity.oclIsUndefined() then
				Sequence{}
			else if not keyEntity.isContained() then
				Sequence{}
			else
				keyEntity.container().uriPathKeys()
			endif endif
/]

[query public hasRouteParameters(entityOrView : EntityOrView) : Boolean
	= entityOrView.uriPathKeys()->notEmpty()
/]

[query public uriCommonPathKeys(page : Page) : Sequence(Attribute)
	= if page.units->isEmpty() then
			Sequence{}
		else if page.units->size() = 1 then
			page.units->first().uriPathKeys(false)
		else
			page.units->subOrderedSet(2, page.units->size())->iterate(u;
				common : Sequence(Attribute) = page.units->first().uriPathKeys(false)
				| common->select(k | u.uriPathKeys(false)->includes(k)))
		endif endif
/]

[query public hasRouteParameters(unit : ContentUnit) : Boolean
	= unit.uriPathKeys()->notEmpty()
/]

[query public hasRouteParameters(unit : ContentUnit, parentPath : Boolean) : Boolean
	= unit.uriPathKeys(parentPath)->notEmpty()
/]

[query public uriPathKeys(unit : ContentUnit) : Sequence(Attribute)
	= unit.uriPathKeys(false)
/]

[query public uriPathKeys(unit : ContentUnit, parentPath : Boolean) : Sequence(Attribute)
	= if not unit.oclIsKindOf(DynamicUnit) then
			Sequence{}
		else 
			let dynamicUnit : DynamicUnit = unit.oclAsType(DynamicUnit)
				in if dynamicUnit.entities->isEmpty() then
						Sequence{}
					else
						let entityOrView : EntityOrView
							= dynamicUnit.entities->first()
							in if parentPath then
									entityOrView.parentUriPathKeys()
								else
									entityOrView.uriPathKeys()
								endif
					endif
		endif
/]
