[comment encoding = UTF-8 /]
[module uriRoutes(
	'http://www.cs.man.ac.uk/mdsd/2010/ObjectRelationalMapping',
	'http://www.cs.man.ac.uk/mdsd/2015/WebApplicationFramework')]
[import uk::ac::man::cs::mdsd::orm::m2t::core::featureProperties/]
[import uk::ac::man::cs::mdsd::waf::m2t::core::featureProperties/]


[query public keyEntity(entityOrView : EntityOrView) : EntityOrView
	= if entityOrView.attributeKeys()->notEmpty() then
			entityOrView
		else if entityOrView.isContained() then
			entityOrView.container().keyEntity()
		else
			null
		endif endif
/]

[query private parentUriPathKeys(entityOrView : EntityOrView) : Sequence(Attribute)
	= let keyEntity : EntityOrView
		= entityOrView.keyEntity()
		in if keyEntity.oclIsUndefined() then
				Sequence{}
			else if not keyEntity.isContained() then
				Sequence{}
			else
				keyEntity.container().uriPathKeys()
			endif endif
/]


[query public uriPathKeys(entityOrView : EntityOrView) : Sequence(Attribute)
	= let keyEntity : EntityOrView = entityOrView.keyEntity()
		in let localKeys : Sequence(Attribute) = keyEntity.attributeKeys()
			in let parentKeys : Sequence(Attribute) = entityOrView.parentUriPathKeys()
				in if localKeys->isEmpty() then
						parentKeys
					else
						localKeys->iterate(k; j : Sequence(Attribute) = parentKeys | j->append(k))
					endif
/]

[query public hasRouteParameters(entityOrView : EntityOrView) : Boolean
	= entityOrView.uriPathKeys()->notEmpty()
/]


[query public selectType(unit : ContentUnit) : EntityOrView
	= if unit.oclIsKindOf(SelectableUnit) then
			let selectableUnit : SelectableUnit = unit.oclAsType(SelectableUnit)
			in if selectableUnit.oclIsKindOf(IndexUnit) or selectableUnit.oclIsKindOf(ImageUnit) then
				if not selectableUnit.selectionType.oclIsUndefined() then
					selectableUnit.selectionType.keyEntity()
				else
					let contentType : EntityOrView
						= selectableUnit.oclAsType(DynamicUnit).contentType()
						in let keyEntity : EntityOrView
								= contentType.keyEntity()
								in if keyEntity.isContained() then
										keyEntity.container()
									else
										null
									endif
				endif
			else if not selectableUnit.selectionType.oclIsUndefined() then
						selectableUnit.selectionType.keyEntity()
					else
						selectableUnit.oclAsType(DynamicUnit).contentType()
					endif
			endif
		else if unit.oclIsKindOf(DynamicUnit) then
			unit.oclAsType(DynamicUnit).contentType()
		else
			null
		endif endif
/]

[query private uriPathKeys(unit : ContentUnit) : Sequence(Attribute)
	= if not unit.selectType().oclIsUndefined() then
				unit.selectType().uriPathKeys()
			else
				Sequence{}
			endif
/]


[query public uriCommonPathKeys(page : Page) : Sequence(Attribute)
	= if page.units->isEmpty() then
			Sequence{}
		else if page.units->size() = 1 then
			page.units->first().uriPathKeys()
		else
			page.units->subOrderedSet(2, page.units->size())->iterate(u;
				common : Sequence(Attribute) = page.units->first().uriPathKeys()
				| common->select(k | u.uriPathKeys()->includes(k)))
		endif endif
/]