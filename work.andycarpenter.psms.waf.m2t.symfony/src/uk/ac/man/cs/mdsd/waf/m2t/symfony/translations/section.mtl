[comment encoding = UTF-8 /]
[module section(
	'http://andycarpenter.work/psm/ObjectRelationalMapping',
	'http://andycarpenter.work/psm/WebApplicationFramework')]
[import uk::ac::man::cs::mdsd::waf::m2t::core::actions/]
[import uk::ac::man::cs::mdsd::waf::m2t::core::interface/]
[import uk::ac::man::cs::mdsd::waf::m2t::core::translation/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::files/]


[template public sectionsTranslations(model : WafModel)]
[for (page : Page | model.pages->select(p | p.parentPage.oclIsUndefined()))]
[page.sectionTranslations()/]
[/for]
[/template]

[template private sectionTranslations(page : Page) post(trim())]
[file (page.transDirectory().concat('/').concat(page.translationDomain()).concat('.en').concat(page.xlfExtension()), false)]
<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2">
 <file source-language="en" datatype="plaintext" original="file.ext">
  <body>
   [page.translations()/]
  </body>
 </file>
</xliff>
[/file]
[/template]

[template private translations(page : Page) post(trim())]
<trans-unit id="label.[page.pageId()/]">
 <source>label.[page.pageId()/]</source>
 <target>[page.displayLabel.validXML()/]</target>
</trans-unit>
[for (unit : ContentUnit | page.units)]
[unit.translations(page)/]
[/for]
[for (child : Page | page.childPages)]
[child.translations()/]
[/for]
[/template]

[query public entityLabel(field : UnitField) : String
	= if field.oclIsTypeOf(UnitAttribute) then
			field.oclAsType(UnitAttribute).attribute.displayLabel
		else if field.oclIsTypeOf(UnitAssociation) then
			field.oclAsType(UnitAssociation).association.displayLabel
		else
			field.displayLabel
		endif endif
/]

[template private translations(unit : ContentUnit, page : Page) post(trim())]
[if (not unit.omitCaption)]
<trans-unit id="[unit.id()/]">
 <source>[unit.id()/]</source>
 <target>[unit.displayLabel.validXML()/]</target>
</trans-unit>
[/if]
[if (unit.oclIsKindOf(CollectionUnit))]
[let collection : CollectionUnit = unit.oclAsType(CollectionUnit)]
	[if (not collection.hideWhen.oclIsUndefined() and not collection.messageWhenHidden.oclIsUndefined())]
<trans-unit id="[collection.containedId()/].labels.hiddenMessage">
 <source>[collection.containedId()/].labels.hiddenMessage</source>
 <target>[collection.messageWhenHidden.validXML()/]</target>
</trans-unit>
	[/if]
[/let]
[/if]
[if (unit.oclIsKindOf(DynamicUnit))]
[let dynamicUnit : DynamicUnit = unit.oclAsType(DynamicUnit)]
	[if (dynamicUnit.hasFieldTranslations())]
[dynamicUnit.fieldTranslations(page)/]
	[/if]
	[for (action : Action | dynamicUnit.actionsWithMessages())]
[action.actionTranslations()/]
	[/for]
[/let]
[/if]
[/template]

[template private fieldTranslations(unit : DynamicUnit, page : Page)
	? (unit.oclIsKindOf(EditUnit)) post (trim())]
[for (field : UnitField | unit.displayFields)]
	[if (field.hasUnitTranslation())]
<trans-unit id="[unit.containedId()/].labels.[field.labelId()/]">
 <source>[unit.containedId()/].labels.[field.labelId()/]</source>
 <target>[field.displayLabel.validXML()/]</target>
</trans-unit>
		[if (field.oclIsTypeOf(UnitAttribute) or field.oclIsTypeOf(InterfaceField))]
<trans-unit id="[unit.containedId()/].placeholders.[field.placeholderId()/]">
 <source>[unit.containedId()/].placeholders.[field.placeholderId()/]</source>
 <target>[field.placeholder().validXML()/]</target>
</trans-unit>
		[/if]
<trans-unit id="[unit.containedId()/].titles.[field.titleId()/]">
 <source>[unit.containedId()/].titles.[field.titleId()/]</source>
 <target>[field.title.validXML()/]</target>
</trans-unit>
	[/if]
[/for]
[/template]

[template private fieldTranslations(unit : DynamicUnit, page : Page)
	? (not unit.oclIsKindOf(EditUnit)) post (trim())]
[for (field : UnitField | unit.oclAsType(DynamicUnit).displayFields)]
	[if (field.hasCustomisedDisplayLabel)]
<trans-unit id="[unit.containedId()/].labels.[field.labelId()/]">
 <source>[unit.containedId()/].labels.[field.labelId()/]</source>
 <target>[field.displayLabel.validXML()/]</target>
</trans-unit>
	[/if]
[/for]
[/template]

[template private actionTranslations(action : Action) post (trim())]
[if (not action.confirmMessage.oclIsUndefined())]
[action.actionMessageTranslation('confirmMessage', action.confirmMessage)/]
[/if]
[if (not action.failureMessage.oclIsUndefined())]
[action.actionMessageTranslation('failureMessage', action.failureMessage)/]
[/if]
[if (not action.successMessage.oclIsUndefined())]
[action.actionMessageTranslation('successMessage', action.successMessage)/]
[/if]
[/template]

[template private actionMessageTranslation(action : Action, x : String, message : String) post (trim())]
<trans-unit id="[action.containedId()/].[x/]">
 <source>[action.containedId()/].[x/]</source>
 <target>[message.validXML()/]</target>
</trans-unit>
[/template]