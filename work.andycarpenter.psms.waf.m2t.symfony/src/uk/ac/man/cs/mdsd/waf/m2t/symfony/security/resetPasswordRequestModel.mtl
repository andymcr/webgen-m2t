[comment encoding = UTF-8 /]
[module resetPasswordRequestModel(
	'http://andycarpenter.work/psm/WebApplicationFramework')]
[import uk::ac::man::cs::mdsd::orm::m2t::doctrine::files/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::files/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::names/]


[template public resetPasswordRequestModel(security  : LocalAuthenticationSystem)]
[file (security.modelsDirectory().concat('/').concat(security.resetPasswordRequestModelName()).concat(security.executableExtension()), false)]
<?php

namespace [security.modelsNamespace()/];

// use App\Repository\ResetPasswordRequestRepository;
use Doctrine\ORM\Mapping as ORM;
use SymfonyCasts\Bundle\ResetPassword\Model\ResetPasswordRequestInterface;
use SymfonyCasts\Bundle\ResetPassword\Model\ResetPasswordRequestTrait;

/**
 * // @ORM\Entity(repositoryClass=ResetPasswordRequestRepository::class)
 * @ORM\Entity
 */
class [security.resetPasswordRequestModelName()/] implements ResetPasswordRequestInterface
{
    use ResetPasswordRequestTrait;

    /**
     * @ORM\Id
     * @ORM\GeneratedValue
     * @ORM\Column(type="integer")
     */
    private $id;

    /**
     * @ORM\ManyToOne(targetEntity=Authentication::class)
     * @ORM\JoinColumn(nullable=false)
     */
    private $user;

    public function __construct(object $user, \DateTimeInterface $expiresAt, string $selector, string $hashedToken)
    {
        $this->user = $user;
        $this->initialize($expiresAt, $selector, $hashedToken);
    }

    public function getId(): ?int
    {
        return $this->id;
    }

    public function getUser(): object
    {
        return $this->user;
    }
}
[/file]
[/template]
