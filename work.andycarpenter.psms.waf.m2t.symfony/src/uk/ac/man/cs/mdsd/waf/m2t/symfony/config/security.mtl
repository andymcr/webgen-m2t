[comment encoding = UTF-8 /]
[module security(
	'http://cs.manchester.ac.uk/mdsd/WebApplicationFramework')]
[import uk::ac::man::cs::mdsd::orm::m2t::doctrine::files/]
[import uk::ac::man::cs::mdsd::orm::m2t::doctrine::names/]
[import uk::ac::man::cs::mdsd::orm::m2t::core::features/]
[import uk::ac::man::cs::mdsd::orm::m2t::core::files/]
[import uk::ac::man::cs::mdsd::waf::m2t::core::security/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::files/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::names/]


[template public configSecurity(model : WafModel)]
[file (model.configPackagesDirectory().concat('/').concat('security').concat(model.yamlExtension()), false)]
security:
    enable_authenticator_manager: true

[if (model.isAuthenticated())]
    encoders:
	[if (model.isLocallyAuthenticated())]
        [model.modelsNamespace()/]\[authentication.userModelName()/]: auto
	[else]
        Symfony\Component\Security\Core\User\User: plaintext
	[/if]

    providers:
	[if (model.isLocallyAuthenticated())]
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: [model.modelsNamespace()/]\[authentication.userModelName()/]
                property: email
	[elseif (model.isCasAuthenticated())]
        cas:
            entity:
                class: [authentication.modelsNamespace()/]\[authentication.user.modelName()/]
                property: [authentication.userKey.columnName/]
	[else]
        in_memory:
            memory:
                users:
                    webgen:
                        password: genweb
                        roles: 'ROLE_ADMIN'
                    mbassafc:
                        password: not
                        roles: 'ROLE_ADMIN'
	[/if]

    firewalls:
        # disables authentication for assets and the profiler, adapt it according to your needs
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            lazy: true
            switch_user: true
	[if (model.isLocallyAuthenticated())]
            form_login:
                login_path: login
                check_path: login
#            logout: true
		[if (model.localAuthentication().allowRememberMe)]
 #           remember_me:
 #               secret:   '%kernel.secret%'
 #               lifetime: 1209600 # 14 days
		[/if]
	[elseif (model.isCasAuthenticated())]
            guard:
                authenticators:
                    - app.cas_authenticator
	[else]
            # http://symfony.com/doc/current/book/security.html#a-configuring-how-your-users-will-authenticate
            http_basic:
                 provider: in_memory
	[/if]

    # [protected ('role.hierarchy')]
    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: ['['/]ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH[']'/]

    # [/protected]

    access_control:
	[if (model.isLocallyAuthenticated())]
        - { path: ^/login$, roles: PUBLIC_ACCESS, requires_channel: https }
        - { path: ^/register, roles: PUBLIC_ACCESS, requires_channel: https }
        - { path: ^/resetting, roles: PUBLIC_ACCESS, requires_channel: https }
	[/if]
        # [protected ('access.control')]
	[if (model.isAuthenticated())]
        - { path: ^/, roles: PUBLIC_ACCESS, requires_channel: https }
	[/if]
        # [/protected]
[/if]
[/file]
[/template]
