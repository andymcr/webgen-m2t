[comment encoding = UTF-8 /]
[module generate(
	'http://andycarpenter.work/metamodel/base',
	'http://andycarpenter.work/metamodel/security',
	'http://andycarpenter.work/metamodel/WebApplicationFramework')]
[import work::andycarpenter::mdsd::m2t::waf::symfony::files/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::config::envDist/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::config::framework/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::config::frameworkDev/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::config::imagine/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::config::parameters/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::config::recaptcha/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::config::resetPassword/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::config::security/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::config::services/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::config::twig/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::config::vichUploader/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::controllers::api/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::controllers::page/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::extensions::extensions/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::formTypes::formType/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::javascript::generate/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::security::userModel/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::services::service/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::templates::base/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::templates::cards/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::templates::details/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::templates::gallery/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::templates::input/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::templates::navigation/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::templates::page/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::templates::security-forgottenPassword/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::templates::slider/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::templates::staticView/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::templates::tabular/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::translations::entity/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::translations::section/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::translations::navigation/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::views::form::bootstrap/]


[template public symfony(model : WafModel)]
[model.siteProperties.configParameters()/]
[model.configFramework()/]
[model.configFrameworkDev()/]
[model.configServices()/]
[if (model.hasImageUnits)]
[model.configImagine()/]
[/if]
[model.configSecurity()/]
[if (model.isLocallyAuthenticated)]
	[if (model.localAuthentication.allowSelfRegistration and model.localAuthentication.useCaptcha)]
[model.localAuthentication.configRecaptcha()/]
[model.localAuthentication.configResetPassword()/]
	[/if]
[/if]
[model.configTwig()/]
[if (model.hasResourceFields)]
[model.configVichUploader()/]
[/if]
[model.business.services.service()/]

[model.formTypes()/]
[model.pages->select(p | p.units->notEmpty()).controller(model)/]

[if (model.hasAPI)]
[model.api.resources.controller(model)/]
[/if]

[model.navigation.navigation(model.siteProperties)/]
[model.siteProperties.generatePage()/]
[model.pages->select(p | p.hasNonSecurityUnits).page()/]
[model.pages.units.unitView()/]
[model.pages.units.unitExtraViews()/]
[model.formViews()/]

[model.entityTranslations()/]
[model.navigation.navigationTranslations()/]
[model.sectionsTranslations()/]


[if (model.isAuthenticated)]
[if (model.isLocallyAuthenticated)]
[let security : LocalAuthenticationSystem = model.localAuthentication]
[/let]
[elseif (model.isCasAuthenticated)]
[let security : CasAuthentication = model.casAuthentication]
[security.userModel()/]
[/let]
[/if]
[/if]

[model.javascript()/]

[model.extensions()/]
[/template]
