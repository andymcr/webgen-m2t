[comment encoding = UTF-8 /]
[module services(
	'http://andycarpenter.work/metamodel/WebApplicationFramework')]
[import work::andycarpenter::mdsd::m2t::waf::symfony::files/]


[template public configServices(model : WafModel)]
[file (model.configDirectory().concat('/services').concat(model.yamlExtension()), false)]
services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['['/]'controller.service_arguments'[']'/]

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
[if (model.siteProperties.useDbSessionStorage)]

    Symfony\Component\HttpFoundation\Session\Storage\Handler\PdoSessionHandler:
        arguments:
            - '%env(resolve:SESSION_DB_URL)%'

[/if]
[/file]
[/template]