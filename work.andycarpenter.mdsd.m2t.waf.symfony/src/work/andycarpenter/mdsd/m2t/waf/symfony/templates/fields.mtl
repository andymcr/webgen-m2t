[comment encoding = UTF-8 /]
[module fields(
	'http://andycarpenter.work/metamodel/WebApplicationFramework')]
[import work::andycarpenter::mdsd::m2t::orm::doctrine::names/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::interface/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::names/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::translation/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::expression::twig/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::templates::data/]


[template public fields(unit : DynamicUnit, unitAccessor : String) post(trim())]
[if (unit.hasOmittedFieldLabels())]
<ul[if (unit.hasCommonFieldListClass)] class="[unit.commonFieldListClass/]"[/if]>
[else]
<dl[if (unit.hasCommonDefinitionFieldListClass)] class="[unit.commonDefinitionFieldListClass/]"[/if]>
[/if]
[for (field : UnitField | unit.displayFields)]
 [field.field(unit, unitAccessor)/]
[/for]
[if (unit.hasOmittedFieldLabels())]
</ul>
[else]
</dl>
[/if]
[/template]

[template private field(field : UnitField, unit : DynamicUnit, unitAccessor : String) post(trim())]
[if (field.isAuthorised)]
{% if is_granted('[field.authorisationRoles/]') %}
[/if]
[if (field.isConditionalDisplay())]
{% if not ([field.hideWhen.twigExpression(unitAccessor)/]) -%}
[/if]
[if (unit.hasOmittedFieldLabels())]
[field.unlabelledField(unit, unitAccessor)/]
[else]
[field.labelledField(unit, unitAccessor)/]
[/if]
[if (field.isConditionalDisplay())]
{%- endif %}
[/if]
[if (field.isAuthorised)]
{% endif %}
[/if]
[/template]

[template private labelledField(field : UnitField, unit : DynamicUnit, unitAccessor : String) post(trim())]
[field.fieldLabel(unit)/]
<dd [field.valueClass()/]>[field.displayValue(unitAccessor, true)/]</dd>
[/template]

[template private fieldLabel(field : UnitField, unit : DynamicUnit) post(trim())]
<dt[if (field.hasFieldLabelClass)] [field.labelClass()/][/if]>[if (field.hasCustomisedDisplayLabel)]
{{ '[field.customisedCaptionContainedId()/]' | trans({}, '[unit.translationDomain()/]') }}[else]
{{ '[if (field.isFeatureField)][field.oclAsType(UnitFeature).defaultDisplayLabelContainedId()/][else]XXXXXXXX[/if]' | trans }}[/if]</dt>
[/template]

[template private labelClass(field : UnitField) post(trim())]
class="[field.fieldLabelClass/]"
[/template]

[template private unlabelledField(field : UnitField, unit : DynamicUnit, unitAccessor : String) post(trim())]
<li [field.valueClass()/]>[field.displayValue(unitAccessor, true)/]</li>
[/template]

[template private valueClass(field : UnitField) post(trim())]
class="[if (field.hasFieldValueClass)]
[field.fieldValueClass/] [/if][if (field.truncate and field.isSingleton)]
text-truncate [/if]
[field.styleClass().snakeCase()/]"
[/template]