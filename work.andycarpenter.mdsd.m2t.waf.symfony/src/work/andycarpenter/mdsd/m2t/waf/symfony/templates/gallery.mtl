[comment encoding = UTF-8 /]
[module gallery(
	'http://andycarpenter.work/metamodel/ObjectRelationalMapping',
	'http://andycarpenter.work/metamodel/WebApplicationFramework')]
[import work::andycarpenter::mdsd::m2t::waf::symfony::files/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::names/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::expression::twig/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::translation/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::templates::accessor/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::templates::image/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::templates::titles/]


[template public unitView(unit : ContentUnit)
	? (unit.oclIsTypeOf(GalleryUnit)) post(trim())]
[let galleryUnit : GalleryUnit = unit.oclAsType(GalleryUnit)]
[file(galleryUnit.templateFilename(), false)]
{% trans_default_domain "entity" %}
<section [if (galleryUnit.hasSectionClass)] class="[galleryUnit.sectionClass/]" [/if]id="[galleryUnit.instanceParameter()/]">
<h4[if (galleryUnit.hasCaptionClass or galleryUnit.omitCaption)]
 class="[if (galleryUnit.hasCaptionClass)][galleryUnit.captionClass/][/if] [if (galleryUnit.omitCaption)] hidden[/if]"[/if]>[galleryUnit.unitTitle()/]</h4>
 <div class="[galleryUnit.contentClass/]">
  [galleryUnit.unitContent(null, galleryUnit.instanceParameter(), 0)/]
 </div>
</section>
[/file]
[/let]
[/template]

[template public unitContent(unit : ContentUnit, nullDisplayValue : String, accessor : String, depthIndex : Integer)
	? (unit.oclIsTypeOf(GalleryUnit)) post(trim())]
[let galleryUnit : GalleryUnit = unit.oclAsType(GalleryUnit)]
[galleryUnit.blueimpGallery(accessor)/]
[/let]
[/template]


[template private uniteGallery(unit : GalleryUnit, accessor : String) post(trim())]
[let variable : String = 'image']
<div id="gallery"[if (unit.hasContentClass)] class="[unit.contentClass/]"[/if] style="display:none;">
{%- for [variable/] in [accessor/] -%}
 [unit.image(variable, unit.elementTitle, '')/]
{%- endfor -%}
</div>
<script type="text/javascript"> 
    jQuery(document).ready(function(){ 
        jQuery("#gallery").unitegallery({
            gallery_theme: "tilesgrid",

            grid_space_between_cols:1,
            grid_space_between_rows:1,
            grid_padding:0,
            tile_enable_border:false,
            tile_enable_shadow:false,
[let thumbFilter : ThumbnailFilter = unit.thumbFilter()]
[if (not thumbFilter.oclIsUndefined())]
            tile_height:[thumbFilter.height/],
            tile_width:[thumbFilter.width/],
[/if]
[/let]
            tile_enable_textpanel:true,
            tile_textpanel_title_text_align: "center",
            lightbox_type: "compact",
            lightbox_arrows_position: "inside",
        });
    }); 
</script>
[/let]
[/template]

[template private blueimpGallery(unit : GalleryUnit, accessor : String) post(trim())]
<div id="blueimp-gallery" class="blueimp-gallery blueimp-gallery-controls">
 <div class="slides"></div>
 <h3 class="title"></h3>
 <a class="prev">&lt;</a>
 <a class="next">&gt;</a>
 <a class="play-pause"></a>
 <ol class="indicator"></ol>
</div>
<div id="links">
[let variable : String = 'image']
{% for [variable/] in [unit.instanceParameter()/] %}
 [unit.blueimpEntry(variable, unit.elementTitle)/]
{% endfor %}
[/let]
</div>
<script src="{{ asset('js/blueimp-gallery.min.js') }}"></script>
<script>
document.getElementById('links').onclick = function (event) {
    event = event || window.event;
    var target = event.target || event.srcElement,
        link = target.src ? target.parentNode : target,
        options = {
            index: link,
[if (unit.showTime > 0)]
            slideshowInterval: [unit.showTime/],
[/if]
[if (unit.transitionTime > 0)]
            transitionSpeed: [unit.transitionTime/],
[/if]
            event: event
        },
        links = this.getElementsByTagName('a');
    blueimp.Gallery(links, options);
};
</script>
[/template]

[template public blueimpEntry(unit : GalleryUnit, baseAccessor : String, title : DisplayValue) post(trim())]
[let imageAccessor : String = unit.imageFeaturePath.accessor(baseAccessor, null)]
[if (unit.showMissingImageWhen.oclIsUndefined())]
	[if (not unit.imageFeaturePath.isRequired)]
{%- if [imageAccessor/] is not empty -%}
	[/if]
[unit.blueimpImage(unit, imageAccessor, baseAccessor, title)/]
	[if (not unit.imageFeaturePath.isRequired)]
		[if (not unit.missingImagePath.oclIsUndefined())]
{%- else -%}
[unit.blueimpMissing(unit, baseAccessor, title)/]
		[/if]
{%- endif -%}
	[/if]
[else]
{%- if [unit.showMissingImageWhen.twigExpression(baseAccessor)/] -%}
	[if (not unit.missingImagePath.oclIsUndefined())]
[unit.blueimpMissing(unit, baseAccessor, title)/]
	[/if]
{%- else -%}
	[if (not unit.imageFeaturePath.isRequired)]
{%- if [imageAccessor/] is not empty -%}
	[/if]
[unit.blueimpImage(unit, imageAccessor, baseAccessor, title)/]
	[if (not unit.imageFeaturePath.isRequired)]
		[if (not unit.missingImagePath.oclIsUndefined())]
{%- else -%}
[unit.blueimpMissing(unit, baseAccessor, title)/]/>
		[/if]
{%- endif -%}
	[/if]
{%- endif -%}
[/if]
[/let]
[/template]

[template public blueimpMissing(unit : GalleryUnit, baseAccessor : String, title : DisplayValue) post(trim())]
<a [unit.imageMissingSrc('href', unit.fullSizeFilter)/] [unit.imageTitle(baseAccessor, title)/]>
 [unit.imageMissing(unit.imageFilter, baseAccessor, title)/]
</a>
[/template]

[template public blueimpImage(unit : GalleryUnit, imageAccessor : String, baseAccessor : String, title : DisplayValue) post(trim())]
<a href="{{ [imageAccessor/][if (not unit.fullSizeFilter.oclIsUndefined())]
 | imagine_filter('[unit.fullSizeFilter.name/]')[/if] [unit.imageTitle(baseAccessor, title)/]}}" />
</a>
[/template]