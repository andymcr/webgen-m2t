[comment encoding = UTF-8 /]
[module resetPasswordChangeFormType(
	'http://andycarpenter.work/metamodel/security',
	'http://andycarpenter.work/metamodel/WebApplicationFramework')]
[import work::andycarpenter::mdsd::m2t::waf::symfony::files/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::names/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::formTypes::featureFields/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::formTypes::captchaField/]


[template public resetPasswordChangeFormType(element : ResetPasswordElement)]
[file (element.formTypeFilename(), false)]
<?php
namespace [element.formNamespace()/];

[if (element.authentication.captcha)]
use Karser\Recaptcha3Bundle\Form\Recaptcha3Type;
use Karser\Recaptcha3Bundle\Validator\Constraints\Recaptcha3;
[/if]
use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\Form\Extension\Core\Type\EmailType;
use Symfony\Component\Form\Extension\Core\Type\PasswordType;
use Symfony\Component\Form\Extension\Core\Type\RepeatedType;
use Symfony\Component\Form\Extension\Core\Type\TextType;
use Symfony\Component\OptionsResolver\OptionsResolver;
use Symfony\Component\Validator\Constraints\Length;
use Symfony\Component\Validator\Constraints\NotBlank;


class [element.typeClassName()/] extends AbstractType
{
    /**
     *
     * @param FormBuilderInterface<string> $builder
     * @param array<string, mixed> $options
     */
    public function buildForm(FormBuilderInterface $builder, array $options): void
    {
        $builder->add('plainPassword', RepeatedType::class, ['['/]
            'type' => PasswordType::class,
            'mapped' => false,
            'translation_domain' => 'security',
            'required' => true,
            'options' => ['['/]
                'row_attr' => ['['/] 'class' => 'px-2 mb-3' [']'/],
            [']'/],
            'first_options' => ['['/]
                'label' => 'security.reset.labels.plain_password',
                'attr' => ['['/]
                    'placeholder' => 'security.reset.placeholders.plain_password',
                    'title' => 'security.reset.titles.plain_password',
                [']'/],
                'constraints' => ['['/]
                    new NotBlank(['['/]
                        'message' => 'Please enter a password',
                    [']'/]),
                    new Length(['['/]
                        'min' => 6,
                        'minMessage' => 'Your password should be at least {{ limit }} characters',
                        // max length allowed by Symfony for security reasons
                        'max' => 4096,
                    [']'/]),
                [']'/],
            [']'/],
            'second_options' => ['['/]
                'label' => 'security.reset.labels.plain_password_confirm',
                'attr' => ['['/]
                    'placeholder' => 'security.reset.placeholders.plain_password_confirm',
                    'title' => 'security.reset.titles.plain_password_confirm',
                [']'/],
            [']'/],
        [']'/]);
[if (element.authentication.captcha)]

        [element.captchaField(element.name)/]
[/if]
      }

    /**
     *
     * @param OptionsResolver $resolver
     */
    public function configureOptions(OptionsResolver $resolver): void
    {
        $resolver->setDefaults(['['/]
        [']'/]);
    }
}
[/file]
[/template]
