[comment encoding = UTF-8 /]
[module units(
	'http://andycarpenter.work/metamodel/ObjectRelationalMapping',
	'http://andycarpenter.work/metamodel/service',
	'http://andycarpenter.work/metamodel/WebApplicationFramework')]
[import work::andycarpenter::mdsd::m2t::orm::doctrine::uriRoutes/]
[import work::andycarpenter::mdsd::m2t::waf::core::uriRoutes/]


[query public useContainerAsContext (variable : FeatureVariable) : Boolean
	= if variable.rootContainer.oclIsKindOf(DynamicUnit) then
			let unit : DynamicUnit = variable.rootContainer.oclAsType(DynamicUnit)
				in false
		else
			false
		endif
/]


[query public containingTypeLoadedBy(unit : DynamicUnit) : DynamicUnit
	= let matchingContentType : OrderedSet(DynamicUnit)
		= unit.controller.dynamicUnits
			->select(u | u.contentType = unit.containingType())
		in if matchingContentType->notEmpty() then
				matchingContentType->first()
			else
				unit.controller.dynamicUnits
					->select(u | u.containingType() = unit.containingType())
					->first()
			endif
/]


[query public containingTypeLoadedElsewhere(unit : DynamicUnit) : Boolean
	= unit.containingTypeLoadedBy() <> unit and unit.controller.isSinglePage
/]

[query public loadContainingType(unit : CollectionUnit) : Boolean
	= not unit.findContainerSelection.oclIsUndefined()
		or unit.routeParameters()->includesAll(unit.containingType().uriPathKeys())
			and not unit.containingTypeLoadedElsewhere()
/]

[query public selection(unit : DynamicUnit) : Selection
	= if unit.oclIsKindOf(CollectionUnit) then
			unit.oclAsType(CollectionUnit).selection
		else if unit.oclIsKindOf(DetailsUnit) then
			unit.oclAsType(DetailsUnit).selection
		else
			null
		endif endif
/]

[query public selection(field : UnitField) : Selection
	= field.displayedOn.selection()
/]


[query public hasObjectAccess(field : UnitField, selection : Selection) : Boolean
	= if selection.oclIsUndefined() then
			true
		else
			selection.fields->isEmpty()
		endif
/]

[query public hasObjectAccess(path : Path, selection : Selection) : Boolean
	= if selection.oclIsUndefined() then
			true
		else
			selection.fields->isEmpty()
		endif
/]