[comment encoding = UTF-8 /]
[module detailsMethods(
	'http://andycarpenter.work/metamodel/ObjectRelationalMapping',
	'http://andycarpenter.work/metamodel/WebApplicationFramework')]
[import work::andycarpenter::mdsd::m2t::orm::doctrine::names/]
[import work::andycarpenter::mdsd::m2t::waf::core::uriRoutes/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::actions/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::interface/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::names/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::uriRoutes/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::controllers::attributes/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::controllers::commonMethods/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::expression::controller/]


[template public unitMethods(unit : ContentUnit)
	? (unit.oclIsTypeOf(DetailsUnit)) post(trim())]
[let detailsUnit : DetailsUnit = unit.oclAsType(DetailsUnit)]
[detailsUnit.actionMethod()/]
[/let]
[/template]

[template private actionMethod(unit : DetailsUnit) post(trim())]
/**
 */
[if (unit.isAuthorised)]
[unit.securityAttribute()/]
[/if]
[unit.routeAttribute()/]
public function [unit.actionName()/]([unit.actionMethodFormals()/]): Response
{
    return $this->renderPage([unit.renderMethodActuals()/]);
}
[/template]

[template private renderCode(unit : ContentUnit)
	? (unit.oclIsKindOf(DetailsUnit)) post(trim())]
[let detailsUnit : DetailsUnit = unit.oclAsType(DetailsUnit)]
[if (detailsUnit.selection.oclIsUndefined())]
[detailsUnit.instanceVariable()/] = [detailsUnit.loadInstance()/];
[else]
[detailsUnit.instanceVariable()/] = $this->[detailsUnit.selection.definedBy.instanceName()/]->[detailsUnit.selection.methodName/]();
[/if]
if (is_null([detailsUnit.instanceVariable()/])) {
    throw $this->createNotFoundException('The [detailsUnit.contentType.name/] does not exist');
}
[if (detailsUnit.isConditionallyDisplayed)]
if (!([detailsUnit.hideWhen.controllerExpression(detailsUnit.instanceVariable(), null)/])) {
    $parameters['['/]'[detailsUnit.instanceParameter()/]'[']'/] = [detailsUnit.instanceVariable()/];
}
[else]
$parameters['['/]'[detailsUnit.instanceParameter()/]'[']'/] = [detailsUnit.instanceVariable()/];
[/if]
[/let]
[/template]