[comment encoding = UTF-8 /]
[module baseFilter(
	'http://andycarpenter.work/metamodel/ObjectRelationalMapping',
	'http://andycarpenter.work/metamodel/WebApplicationFramework')]
[import work::andycarpenter::mdsd::m2t::waf::symfony::files/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::names/]


[template public baseFilter(model : WafModel)]
[file(model.filterFilename(model.filterBaseClassName()), false)]
<?php
namespace [model.filterNamespace()/];

use [model.filterNamespace()/]\[model.filterInterfaceClassName()/];
use Symfony\Component\Form\Form;


abstract class [model.filterBaseClassName()/] implements [model.filterInterfaceClassName()/]
{
    /**
     * Nmae of the filter.
     */
    private string $name = '';

    /**
     * @param string $name
     */
    public function __construct(string $name)
    {
        $this->name = $name;
    }

    /**
     *
     * @param Form $filterForm
     */
    public function isActive(Form $filterForm): bool
    {
        return $filterForm->has($this->name);
    }
}
[/file]
[/template]