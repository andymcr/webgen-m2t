[comment encoding = UTF-8 /]
[module value(
	'http://andycarpenter.work/metamodel/ObjectRelationalMapping',
	'http://andycarpenter.work/metamodel/WebApplicationFramework')]
[import work::andycarpenter::mdsd::m2t::orm::doctrine::names/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::names/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::templates::accessor/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::templates::labels/]


[template public getValue(field : UnitField, accessor : String) post(trim())]
[if (field.isFeatureField)]
[field.oclAsType(UnitFeature).getValue(accessor)/]
[else]
NULL
[/if]
[/template]

[template public getValue(feature : UnitFeature, accessor : String) post(trim())]
[if (feature.isAttributeField)]
[feature.oclAsType(UnitAttribute).getValue(accessor)/]
[elseif (feature.isResourceField)]
[feature.oclAsType(UnitResource).getValue(accessor)/]
[else]
[feature.oclAsType(UnitAssociation).getValue(accessor)/]
[/if]
[/template]

[template public getValue(attribute : UnitAttribute, accessor : String) post(trim())]
[attribute.attribute.getValue(accessor)/]
[/template]

[template public getValue(resource : UnitResource, accessor : String) post(trim())]
[resource.resource.getValue(accessor)/]
[/template]

[template public getValue(association : UnitAssociation, accessor : String) post(trim())]
[if (not association.childFeature.oclIsUndefined())]
[association.childFeature.getValue(accessor)/]
[else]
	[if (not association.valueDisplay.oclIsUndefined())]
[association.valueDisplay.label(accessor)/]
	[else]
[accessor/].defaultLabel()
	[/if]
[/if]
[/template]

[template public getValue(path : DisplayValue, accessor : String) post(trim())]
[if (path.oclIsTypeOf(AttributeDisplayValue))]
[path.oclAsType(AttributeDisplayValue).getValue(accessor)/]
[elseif (path.oclIsTypeOf(AssociationDisplayValue))]
[path.oclAsType(AssociationDisplayValue).getValue(accessor)/]
[elseif (path.oclIsTypeOf(ResourceDisplayValue))]
[path.oclAsType(ResourceDisplayValue).getValue(accessor)/]
[else]
[path.oclAsType(LabelDisplayValue).getValue(accessor)/]
[/if]
[/template]

[template public getValue(path : AssociationDisplayValue, accessor : String) post(trim())]
[let x : String
		= accessor.concat('.').concat(path.association.modelPropertyName())]
[if (path.childFeature.oclIsUndefined())]
[x/].defaultLabel()
[else]
[path.childFeature.getValue(x)/]
[/if]
[/let]
[/template]

[template public getValue(path : AttributeDisplayValue, accessor : String) post(trim())]
[accessor/].[path.attribute.modelPropertyName()/]
[/template]

[template public getValue(path : ResourceDisplayValue, accessor : String) post(trim())]
[accessor/].[path.resource.modelPropertyName()/]
[/template]

[template private getValue(child : ChildFeature, accessor : String)
	? (child.oclIsTypeOf(ChildAssociation)) post(trim())]
[let association : ChildAssociation = child.oclAsType(ChildAssociation)]
[if (not association.childFeature.oclIsUndefined())]
[association.childFeature.getValue(accessor)/]
[else]
	[if (not association.valueDisplay.oclIsUndefined())]
[association.valueDisplay.label(accessor)/]
	[else]
[accessor/].defaultLabel()
	[/if]
[/if]
[/let]
[/template]

[template private getValue(child : ChildFeature, accessor : String)
	? (child.oclIsTypeOf(ChildAttribute)) post(trim())]
[let attribute : ChildAttribute = child.oclAsType(ChildAttribute)]
[attribute.attribute.getValue(accessor.concat('.').concat(attribute.attribute.modelPropertyName()))/]
[/let]
[/template]


[template public getValue(attribute : Attribute, accessor : String)
	? (attribute.isDataTypeFeature and not attribute.isEnumerationFeature
		or attribute.isDateFeature or attribute.isUrlFeature or attribute.isResourceFeature) post(trim())]
[accessor/]
[/template]

[template public getValue(attribute : Attribute, accessor : String)
	? (attribute.isEnumerationFeature) post(trim())]
[accessor/] | [attribute.enumerationType.filterName()/] | trans({}, 'entity')
[/template]

[template public getValue(resource : ResourceFeature, accessor : String) post(trim())]
[accessor/]
[/template]