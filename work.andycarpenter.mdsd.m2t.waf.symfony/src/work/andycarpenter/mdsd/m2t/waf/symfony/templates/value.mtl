[comment encoding = UTF-8 /]
[module value(
	'http://andycarpenter.work/metamodel/ObjectRelationalMapping',
	'http://andycarpenter.work/metamodel/WebApplicationFramework')]
[import work::andycarpenter::mdsd::m2t::orm::doctrine::names/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::names/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::units/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::templates::accessor/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::templates::labels/]


[template public getValue(field : UnitField, accessor : String)
	? (field.isFeatureField()) post(trim())]
[field.oclAsType(Path).getPathValue(accessor)/]
[/template]

[template public getValue(field : UnitField, accessor : String)
	? (field.isInterfaceField()) post(trim())]
NULL
[/template]

[template public getValue(field : UnitField, accessor : String)
	? (field.isLabelField()) post(trim())]
[accessor/][field.oclAsType(UnitLabel).label.label()/]
[/template]


[template public getPathValue(path : Path, accessor : String) post(trim())]
[let leaf : Path = path.leafElement()]
[if (leaf.oclIsKindOf(AssociationPathElement))]
[path.getPathValue(leaf.oclAsType(AssociationPathElement), accessor)/]
[elseif (leaf.oclIsKindOf(AttributePathElement))]
[path.getPathValue(leaf.oclAsType(AttributePathElement), accessor)/]
[elseif (leaf.oclIsKindOf(ResourcePathElement))]
[path.getPathValue(leaf.oclAsType(ResourcePathElement), accessor)/]
[else]
[path.getPathValue(leaf.oclAsType(LabelDisplayValue), accessor)/]
[/if]
[/let]
[/template]

[template private getPathValue(path : Path, leaf : AssociationPathElement, accessor : String) post(trim())]
[leaf.association.getValue(accessor, leaf.valueDisplay)/]
[/template]

[template private getPathValue(path : Path, leaf : AttributePathElement, accessor : String) post(trim())]
[leaf.attribute.getValue(accessor)/]
[/template]

[template private getPathValue(path : Path, leaf : ResourcePathElement, accessor : String) post(trim())]
[leaf.resource.getValue(accessor)/]
[/template]

[template private getPathValue(path : Path, leaf : LabelDisplayValue, accessor : String) post(trim())]
[/template]


[template public getValue(association : Association, accessor : String,  label : ModelLabel) post(trim())]
[accessor/][if (label.oclIsUndefined())]
.defaultLabel()
[else]
[label.label()/]
[/if]
[/template]

[template public getValue(attribute : Attribute, accessor : String)
	? (attribute.isDataTypeFeature and not attribute.isEnumerationFeature
		or attribute.isDateFeature or attribute.isUrlFeature or attribute.isResourceFeature) post(trim())]
[accessor/]
[/template]

[template public getValue(attribute : Attribute, accessor : String)
	? (attribute.isEnumerationFeature) post(trim())]
[accessor/] | [attribute.enumerationType.filterName()/] | trans({}, 'entity')
[/template]

[template public getValue(resource : ResourceFeature, accessor : String) post(trim())]
[accessor/]
[/template]


[template public existanceTest(path : Path, parentAccessor : String, selection : Selection) post(trim())]
[let leaf : Path = path.leafElement()]
[if (leaf.oclIsTypeOf(ResourcePathElement))]
[path.existanceTest(leaf.oclAsType(ResourcePathElement), parentAccessor, selection)/]
[/if]
[/let]
[/template]

[template public existanceTest(path : Path, leaf : ResourcePathElement, parentAccessor : String,
		objectAccess : Boolean, selection : Selection)]
[path.accessor(parentAccessor, selection)/][if (leaf.hasObjectAccess(selection))][if (leaf.resource.alias(selection).oclIsUndefined())]
[leaf.resource.detailsPropertyName()/][else]
[leaf.resource.alias(selection)/][/if].name[else][if (leaf.resource.alias(selection).oclIsUndefined())]
[leaf.resource.columnName/][else]
[leaf.resource.alias(selection)/][/if][/if]
[/template]
