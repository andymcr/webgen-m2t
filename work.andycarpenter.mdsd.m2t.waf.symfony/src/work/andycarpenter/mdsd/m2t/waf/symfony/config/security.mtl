[comment encoding = UTF-8 /]
[module security(
	'http://andycarpenter.work/metamodel/security',
	'http://andycarpenter.work/metamodel/WebApplicationFramework')]
[import work::andycarpenter::mdsd::m2t::orm::doctrine::files/]
[import work::andycarpenter::mdsd::m2t::orm::doctrine::names/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::files/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::names/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::uriRoutes/]


[template public configSecurity(authentication : LocalAuthenticationSystem)]
[file (authentication.configPackagesDirectory().concat('/').concat('security').concat(authentication.yamlExtension()), false)]
security:
    enable_authenticator_manager: true

    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: [authentication.modelsNamespace()/]\[authentication.authenticationModel.modelClassName()/]
                property: [authentication.identifierFeature.modelPropertyName()/]

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            lazy: true
#            login_throttling: null
            switch_user: true
            custom_authenticator: [authentication.authenticationNamespace()/]\[authentication.authenticatorName()/]
            logout:
[if (authentication.logoutElement.routeName() <> '/logout')]
                path: [authentication.logoutElement.routeName()/]
[/if]
		[if (authentication.allowRememberMe)]
            remember_me:
                secret:   '%kernel.secret%'
                lifetime: 1209600 # 14 days
                signature_properties: ['['/]password[']'/]
                always_remember_me: true
		[/if]

    # [protected ('role.hierarchy')]
    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: ['['/]ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH[']'/]

    # [/protected]

    access_control:
        - { path: ^[authentication.loginElement.uriPath()/]$, roles: PUBLIC_ACCESS, requires_channel: https }
[if (authentication.allowSelfRegistration)]
        - { path: ^[authentication.registrationElement.uriPath()/], roles: PUBLIC_ACCESS, requires_channel: https }
[/if]
        - { path: ^[authentication.forgottenPasswordElement.uriPath()/], roles: PUBLIC_ACCESS, requires_channel: https }
        # [protected ('access.control')]
        - { path: ^/, roles: PUBLIC_ACCESS, requires_channel: https }
        # [/protected]
[/file]
[/template]
