[comment encoding = UTF-8 /]
[module forgottenPasswordRequestFormType(
	'http://andycarpenter.work/metamodel/ObjectRelationalMapping',
	'http://andycarpenter.work/metamodel/security',
	'http://andycarpenter.work/metamodel/WebApplicationFramework')]
[import work::andycarpenter::mdsd::m2t::waf::symfony::files/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::names/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::translation/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::formTypes::featureFields/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::formTypes::captchaField/]


[template public requestFormType(element : ForgottenPasswordElement)]
[file (element.formRequestTypeFilename(), false)]
<?php
namespace [element.formNamespace()/];

[if (element.authentication.captcha)]
use Karser\Recaptcha3Bundle\Form\Recaptcha3Type;
use Karser\Recaptcha3Bundle\Validator\Constraints\Recaptcha3;
[/if]
use Symfony\Component\Form\AbstractType;
[if (element.authentication.authenticationKey.isEmailFeature)]
[/if]
use Symfony\Component\Form\Extension\Core\Type\EmailType;
[if (element.authentication.authenticationKey.isStringFeature)]
use Symfony\Component\Form\Extension\Core\Type\TextType;
[/if]
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolver;


class [element.typeRequestClassName()/] extends AbstractType
{
    /**
     *
     * @param FormBuilderInterface $builder
     * @param array<string, mixed> $options
     */
    public function buildForm(FormBuilderInterface $builder, array $options): void
    {
[let identifierFeature : Attribute = element.authentication.identifierFeature]
        [identifierFeature.formFeature(false)/];
[/let]
[if (element.authentication.captcha)]

        [element.captchaField(element.name)/]
[/if]
    }

    /**
     *
     * @param OptionsResolver $resolver
     */
    public function configureOptions(OptionsResolver $resolver): void
    {
        $resolver->setDefaults(['['/]
            'csrf_token_id'   => '[element.csrfTokenId()/]',
        [']'/]);
    }
}
[/file]
[/template]
