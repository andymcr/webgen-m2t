[comment encoding = UTF-8 /]
[module slider(
	'http://andycarpenter.work/metamodel/ObjectRelationalMapping',
	'http://andycarpenter.work/metamodel/WebApplicationFramework')]
[import work::andycarpenter::mdsd::m2t::orm::doctrine::names/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::files/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::interface/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::names/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::templates::image/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::templates::titles/]


[template public unitView(unit : ContentUnit)
	? (unit.oclIsTypeOf(SliderUnit)) post(trim())]
[let sliderUnit : SliderUnit = unit.oclAsType(SliderUnit)]
[file(sliderUnit.templateFilename(), false)]
<section [if (sliderUnit.hasSectionClass)] class="[sliderUnit.sectionClass/]" [/if]id="[sliderUnit.instanceParameter()/]">
 <h4[if (sliderUnit.hasCaptionClass or sliderUnit.omitCaption)]
 class="[if (sliderUnit.hasCaptionClass)][sliderUnit.captionClass/][/if] [if (sliderUnit.omitCaption)] hidden[/if]"[/if]>[sliderUnit.unitTitle()/]</h4>
 [comment sliderUnit.materializeCSS()/]
 [sliderUnit.bootstrap()/]
</section>
[/file]
[/let]
[/template]

[template private materializeCSS(unit : SliderUnit) post(trim())]
<div class="slider">
 <ul class="slides">
[let variable : String = unit.contentType.instanceName()]
{% for [variable/] in [unit.instanceParameter()/] %}
  <li>[unit.image(variable, unit.elementTitle, '')/]</li>
{% endfor %}
[/let]
 </ul>
</div>
<script>
var elem = document.querySelector('.slider');
var instance = M.Slider.init(elem[if (unit.showTime > 0 or unit.transitionTime > 0)], {
	[if (unit.showTime > 0)]
        interval: [unit.showTime/][if (unit.transitionTime > 0)],
[/if]
	[/if]
	[if (unit.transitionTime > 0)]
        duration: [unit.transitionTime/]
	[/if]
    }[/if]);
</script>
[/template]

[template private bootstrap(unit : SliderUnit) post(trim())]
<div id="carouselExampleControls" class="carousel slide" data-bs-ride="carousel">
 <div class="carousel-inner">
[let variable : String = unit.contentType.instanceName()]
{% for [variable/] in [unit.instanceParameter()/] %}
  <div class="carousel-item{% if loop.first %} active{% endif %}">[unit.image(variable, unit.elementTitle, '')/]</div>
{% endfor %}
[/let]
 </div>
</div>
[/template]