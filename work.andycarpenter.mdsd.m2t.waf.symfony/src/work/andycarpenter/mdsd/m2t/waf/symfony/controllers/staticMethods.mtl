[comment encoding = UTF-8 /]
[module staticMethods(
	'http://andycarpenter.work/metamodel/WebApplicationFramework')]
[import work::andycarpenter::mdsd::m2t::waf::core::uriRoutes/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::controller/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::files/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::names/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::controllers::attributes/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::controllers::commonMethods/]


[template public unitMethods(unit : ContentUnit)
	? (unit.oclIsTypeOf(StaticUnit)) post(trim())]
[let staticUnit : StaticUnit = unit.oclAsType(StaticUnit)]
[staticUnit.actionMethod()/]
[/let]
[/template]

[template private actionMethod(unit : StaticUnit) post(trim())]
[let controller : Controller = unit.controller]
/**
 */
[if (unit.isAuthorised())]
[unit.securityAnnotation()/]
[/if]
[unit.routeAttribute()/]
public function [unit.actionName()/]()
{
[if (controller.partOf.siteProperties.staticUnitsEditable)]
   [unit.instanceVariable()/] = $this->get('app.service.staticText')->find('[unit.uniqueName()/]');

[/if]
[if (controller.isMultiPage)]
    return $this->render('[controller.controllerTemplateDirectory()/]/[unit.templateName()/][unit.htmlExtension()/][unit.twigExtension()/]');
[else]
    return $this->renderPage([comment unit.renderMethodActuals()/]);
[/if]
}
[/let]
[/template]

[template private templateParameters(unit : ContentUnit)
	? (unit.oclIsKindOf(StaticUnit)) post(trim())]
[let staticUnit : StaticUnit = unit.oclAsType(StaticUnit)]
[if (unit.controller.partOf.siteProperties.staticUnitsEditable)]
$parameters['['/]'[staticUnit.instanceParameter()/]'[']'/] = [staticUnit.instanceVariable()/];
[/if]
[/let]
[/template]