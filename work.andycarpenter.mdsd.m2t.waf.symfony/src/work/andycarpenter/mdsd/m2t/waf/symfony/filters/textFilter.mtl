[comment encoding = UTF-8 /]
[module textFilter(
	'http://andycarpenter.work/metamodel/ObjectRelationalMapping',
	'http://andycarpenter.work/metamodel/WebApplicationFramework')]
[import work::andycarpenter::mdsd::m2t::waf::symfony::files/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::names/]


[query private filterName(model : WafModel) : String
	= 'Text'
/]


[template public textFilter(model : WafModel)]
[file(model.filterFilename(model.filterClassName(model.filterName())), false)]
<?php
namespace [model.filterNamespace()/];

use [model.filterNamespace()/]\[model.filterInterfaceClassName()/];
use [model.filterNamespace()/]\[model.filterBaseClassName()/];
use Doctrine\ORM\QueryBuilder;


class [model.filterClassName(model.filterName())/] extends [model.filterBaseClassName()/]
{
    /**
     *
     * @param QueryBuilder [model.builderInstanceVariable()/]
     * @param Object $filterData
     */
    public function apply(QueryBuilder $queryBuilder, Object $filterData): void
    {
        $queryBuilder->andWhere(
            $queryBuilder->expr()->like(
                $this->getEntityAliasName() . '.' . $this->getFeatureName(),
                ':' . $this->getName()));
        $reflectionProperty = $this->dataReflector->getProperty($this->getName());
        $value = $reflectionProperty->getValue($filterData);
        $queryBuilder->setParameter($this->getName(), strpos($value, '%') ? $value : '%' . $value . '%');
    }
}
[/file]
[/template]