[comment encoding = UTF-8 /]
[module collection(
	'http://andycarpenter.work/metamodel/base',
	'http://andycarpenter.work/metamodel/ObjectRelationalMapping',
	'http://andycarpenter.work/metamodel/WebApplicationFramework')]
[import work::andycarpenter::mdsd::m2t::waf::core::uriRoutes/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::names/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::units/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::uriRoutes/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::templates::action/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::templates::accessor/]


[template public unitFilters(unit : CollectionUnit) post(trim())]
[for(filter : Filter | unit.supportedFilters)]
[filter.unitFilter(unit)/]
[/for]
[if (unit.hasFilters2())]
<div class="filters">
 {{ form_start([unit.filterFormInstanceParameter()/], { attr: { id: 'filters' }}) }}
  {{ form_errors([unit.filterFormInstanceParameter()/]) }}
	[for(filter : CollectionFilter | unit.filters)]
  {{ form_row([unit.filterFormInstanceParameter()/].[filter.propertyName()/]) }}
	[/for]
  <div class="d-flex justify-content-center bg-light border-top p-2">
   <button type="submit" name="submit" class="btn border rounded mx-2 my-1">{{ 'admin.labels.submit' | trans }}</button>
   <input type="reset" name="clear" class="btn border rounded mx-2 my-1" value="Clear"/>
  </div>
  {{ form_row([unit.filterFormInstanceParameter()/]._token) }}
 {{ form_end([unit.filterFormInstanceParameter()/], {'render_rest': false}) }}
</div>
[/if]
[/template]
 
[template private unitFilter(filter : Filter, unit : CollectionUnit) post(trim())]
<div class="filter">
 <form action="{{ path('[unit.routeName()/]', { [if (unit.hasRouteParameters(unit.selection))]
[unit.routeActualParameters(unit.routeParameters(), unit.containerParameter(), unit.routingType())/][/if] }) }}" method="get">
  <div class="input-group">
[for (parameter : FormalParameter | filter.parameters)]
   <input type="text" name="[parameter.name/]" class="form-control"[if (not parameter.placeholder.oclIsUndefined())]
 placeholder="[parameter.placeholder/]"[/if][if (parameter.defaultValue.oclIsUndefined())]
 required="required"[/if]
 value="{{ app.request.query.get('[parameter.name/]') }}"/>
[/for]
   <button type="submit" name="[filter.name/]Filter" class="btn btn-outline-secondary"><i class="material-icons">search</i></button>
  </div>
 </form>
</div>
[/template]


[template public pagination(unit : CollectionUnit, accessor : String) post(trim())]
{{ pagerfanta([accessor/]) }}
[/template]