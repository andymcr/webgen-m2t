[comment encoding = UTF-8 /]
[module image(
	'http://andycarpenter.work/metamodel/ObjectRelationalMapping',
	'http://andycarpenter.work/metamodel/WebApplicationFramework')]
[import work::andycarpenter::mdsd::m2t::orm::doctrine::names/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::files/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::names/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::translation/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::units/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::expression::twig/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::templates::accessor/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::templates::value/]


[query public thumbFilter(unit : ImageUnit) : ThumbnailFilter
	= let filters : Sequence(ThumbnailFilter)
		= unit.imageFilter.filters->select(f | f.oclIsTypeOf(ThumbnailFilter)).oclAsType(ThumbnailFilter)
		in if filters->isEmpty() then
				null
			else
				filters->first()
			endif
/]


[template public image(siteProperties : SiteProperties) post(trim())]
[let imagePath : String = '\''.concat(siteProperties.logoImage).concat('\'')]
<img src="{{ [imagePath/][if (not siteProperties.logoFilters.oclIsUndefined())]
 | imagine_filter('[siteProperties.logoFilters.name/]')[/if] }}" alt="Logo"/>
[/let]
[/template]

[template public image(unit : ImageUnit, baseAccessor : String, title : DisplayValue, imageClass : String) post(trim())]
[let imageAccessor : String = unit.imageFeaturePath.existanceTestAccessor(baseAccessor, unit.oclAsType(DynamicUnit).selection())]
[if (unit.showMissingImageWhen.oclIsUndefined())]
	[if (not unit.imageFeaturePath.isRequired)]
{%- if [imageAccessor/] is not empty -%}
	[/if]
[unit.imageFeaturePath.leafFeature().image(unit, imageAccessor, baseAccessor, title, imageClass)/]
	[if (not unit.imageFeaturePath.isRequired)]
		[if (not unit.missingImagePath.oclIsUndefined())]
{%- else -%}
[unit.imageMissing(unit.imageFilter, baseAccessor, title)/]
		[/if]
{%- endif -%}
	[/if]
[else]
{%- if [unit.showMissingImageWhen.twigExpression(baseAccessor)/] -%}
	[if (not unit.missingImagePath.oclIsUndefined())]
[unit.imageMissing(unit.imageFilter, baseAccessor, title)/]
	[/if]
{%- else -%}
	[if (not unit.imageFeaturePath.isRequired)]
{%- if [imageAccessor/] is not empty -%}
	[/if]
[unit.imageFeaturePath.leafFeature().image(unit, imageAccessor, baseAccessor, title, imageClass)/]
	[if (not unit.imageFeaturePath.isRequired)]
		[if (not unit.missingImagePath.oclIsUndefined())]
{%- else -%}
[unit.imageMissing(unit.imageFilter, baseAccessor, title)/]
		[/if]
{%- endif -%}
	[/if]
{%- endif -%}
[/if]
[/let]
[/template]

[template public imageMissing(unit : ImageUnit, manipulation : ImageManipulation, baseAccessor : String, title : DisplayValue) post(trim())]
<img [unit.imageMissingSrc('src', manipulation)/] [unit.imageAlt(baseAccessor, title)/] [unit.imageTitle(baseAccessor, title)/]/>
[/template]

[template private image(feature : Feature, unit : ImageUnit, imageAccessor : String, baseAccessor : String,
		title : DisplayValue, imageClass : String)
	?(feature.oclIsKindOf(Attribute)) post(trim())]
[unit.displayImage(imageAccessor, baseAccessor, title, imageClass)/]
[/template]

[template private image(feature : Feature, unit : ImageUnit, imageAccessor : String, baseAccessor : String,
		title : DisplayValue, imageClass : String)
	?(feature.oclIsKindOf(ResourceFeature)) post(trim())]
[let property : String =
	if (unit.imageFeaturePath.leafFeature().partOf.resourceFeatures->size() > 1) then
		', '.concat(unit.imageFeaturePath.leafFeature().modelPropertyName())
	else
		''
	endif]
[unit.displayImage('vich_uploader_asset('
		.concat(unit.imageFeaturePath.getPathValue(unit.imageFeaturePath.accessor(baseAccessor, null)))
		.concat(property).concat(')'),
	baseAccessor, title, imageClass)/]
[/let]
[/template]

[template private displayImage(unit : ImageUnit, accessor : String, baseAccessor : String,
	title : DisplayValue, imageClass : String) post(trim())]
<img [if (imageClass <> '')]class="[imageClass/]" [/if]src="{{ [accessor/][if (not unit.imageFilter.oclIsUndefined())]
 | imagine_filter('[unit.imageFilter.name/]')[/if] }}" [unit.imageAlt(baseAccessor, title)/] [unit.imageTitle(baseAccessor, title)/]/>
[/template]

[template public imageMissingSrc(unit : ImageUnit, key : String, manipulation : ImageManipulation) post(trim())]
[key/]="{{ '[unit.missingImagePath/]'[if (not manipulation.oclIsUndefined())] | imagine_filter('[manipulation.name/]')[/if] }}"
[/template]

[template public imageAlt(unit : ImageUnit, baseAccessor : String, title : DisplayValue) post(trim())]
[if (not title.oclIsUndefined())]
alt="{{ [title.getPathValue(title.accessor(baseAccessor, null))/] }}"
[/if]
[/template]

[template public imageTitle(unit : ImageUnit, baseAccessor : String, title : DisplayValue) post(trim())]
[if (not title.oclIsUndefined())]
title="{{ [title.getPathValue(title.accessor(baseAccessor, null))/] }}"
[/if]
[/template]