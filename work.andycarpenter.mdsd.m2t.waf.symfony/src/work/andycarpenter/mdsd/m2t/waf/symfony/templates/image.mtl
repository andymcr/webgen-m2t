[comment encoding = UTF-8 /]
[module image(
	'http://andycarpenter.work/metamodel/ObjectRelationalMapping',
	'http://andycarpenter.work/metamodel/WebApplicationFramework')]
[import work::andycarpenter::mdsd::m2t::orm::doctrine::names/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::files/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::names/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::translation/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::units/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::expression::twig/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::templates::accessor/]
[import work::andycarpenter::mdsd::m2t::waf::symfony::templates::labels/]


[query public thumbFilter(unit : ImageUnit) : ThumbnailFilter
	= let filters : Sequence(ThumbnailFilter)
		= unit.imageFilter.filters->select(f | f.oclIsTypeOf(ThumbnailFilter)).oclAsType(ThumbnailFilter)
		in if filters->isEmpty() then
				null
			else
				filters->first()
			endif
/]


[template public image(siteProperties : SiteProperties) post(trim())]
[let imagePath : String = '\''.concat(siteProperties.logoImage).concat('\'')]
<img [imagePath.imageSrc('src', siteProperties.logoFilters)/] alt="Logo"/>
[/let]
[/template]

[template public image(unit : ImageUnit, baseAccessor : String, title : FeaturePath, imageClass : String) post(trim())]
[let imageAccessor : String = unit.imagePathFeature.accessor(baseAccessor, null)]
[if (unit.showMissingImageWhen.oclIsUndefined())]
	[if (not unit.imagePathFeature.isRequired)]
{%- if [imageAccessor/] is not empty -%}
	[/if]
[unit.image(unit.imageFilter, imageAccessor, baseAccessor, title, imageClass)/]
	[if (not unit.imagePathFeature.isRequired)]
		[if (not unit.missingImagePath.oclIsUndefined())]
{%- else -%}
[unit.imageMissing(unit.missingImageFilter(), baseAccessor, title)/]
		[/if]
{%- endif -%}
	[/if]
[else]
{%- if [unit.showMissingImageWhen.twigExpression(baseAccessor)/] -%}
	[if (not unit.missingImagePath.oclIsUndefined())]
[unit.imageMissing(unit.missingImageFilter(), baseAccessor, title)/]
	[/if]
{%- else -%}
	[if (not unit.imagePathFeature.isRequired)]
{%- if [imageAccessor/] is not empty -%}
	[/if]
[unit.image(unit.imageFilter, imageAccessor, baseAccessor, title, imageClass)/]
	[if (not unit.imagePathFeature.isRequired)]
		[if (not unit.missingImagePath.oclIsUndefined())]
{%- else -%}
[unit.imageMissing(unit.missingImageFilter(), baseAccessor, title)/]
		[/if]
{%- endif -%}
	[/if]
{%- endif -%}
[/if]
[/let]
[/template]

[query public missingImageFilter(unit : ImageUnit) : ImageManipulation
	= if unit.missingImageFilter.oclIsUndefined() then
			unit.imageFilter
		else
			unit.missingImageFilter
		endif
/]

[template public imageMissing(unit : ImageUnit, manipulation : ImageManipulation, baseAccessor : String, title : FeaturePath) post(trim())]
<img [unit.imageMissingSrc('src', manipulation)/] [unit.imageAlt(baseAccessor, title)/] [unit.imageTitle(baseAccessor, title)/]/>
[/template]

[template public image(unit : ImageUnit, manipulation : ImageManipulation, accessor : String, 
	baseAccessor : String, title : FeaturePath, imageClass : String) post(trim())]
<img [if (imageClass <> '')]class="[imageClass/]" [/if][accessor.imageSrc('src', manipulation)/] [unit.imageAlt(baseAccessor, title)/] [unit.imageTitle(baseAccessor, title)/]/>
[/template]

[template public imageMissingSrc(unit : ImageUnit, key : String, manipulation : ImageManipulation) post(trim())]
[key/]="{{ '[unit.missingImagePath/]'[if (not manipulation.oclIsUndefined())] | imagine_filter('[manipulation.name/]')[/if] }}"
[/template]

[template public imageSrc(accessor : String, key : String, manipulation : ImageManipulation) post(trim())]
[key/]="{{ [accessor/][if (not manipulation.oclIsUndefined())] | imagine_filter('[manipulation.name/]')[/if] }}"
[/template]

[template public imageAlt(unit : ImageUnit, baseAccessor : String, title : FeaturePath) post(trim())]
[if (not title.oclIsUndefined())]
alt="{{ [title.accessor(baseAccessor, null)/][title.valueLabel()/] }}"
[/if]
[/template]

[template public imageTitle(unit : ImageUnit, baseAccessor : String, title : FeaturePath) post(trim())]
[if (not title.oclIsUndefined())]
title="{{ [title.accessor(baseAccessor, null)/][title.valueLabel()/] }}"
[/if]
[/template]