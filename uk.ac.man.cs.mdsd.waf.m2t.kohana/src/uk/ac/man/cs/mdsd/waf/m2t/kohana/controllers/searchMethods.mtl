[comment encoding = UTF-8 /]
[module searchMethods(
	'http://www.cs.man.ac.uk/mdsd/2015/WebApplicationFramework')]
[import uk::ac::man::cs::mdsd::waf::m2t::core::featureProperties/]
[import uk::ac::man::cs::mdsd::waf::m2t::kohana::names/]
[import uk::ac::man::cs::mdsd::waf::m2t::kohana::controllers::commonMethods/]
[import uk::ac::man::cs::mdsd::waf::m2t::kohana::controllers::controlMethods/]


[template public unitMethods(unit : DynamicUnit)
	? (unit.oclIsTypeOf(SearchUnit)) post(trim())]
[let searchUnit : SearchUnit = unit.oclAsType(SearchUnit)]
[searchUnit.actionMethod()/]
[/let]
[/template]

[template private actionMethod(unit : SearchUnit)]
[let service : Service = unit.services->first()]
public function action_[unit.actionName()/]()
{
[if (not unit.cancelDestination.oclIsUndefined())]
    [unit.handleCancel()/]

[/if]
    try
    {
        [unit.valuesFromFormToModel(service)/]
[if (unit.hasForcedValueFeatures())]
        [unit.forcedFeatureValues()/]
[/if]
[if (unit.hasCaptchaFields())]
        [unit.captchaCheck()/]
[/if]
[if (unit.hasInterfaceFields())]
        [unit.interfaceFieldValidation()/]
[/if]
        $this->[service.instanceName()/]->check([if (unit.hasInterfaceFields())]$extra_validation[/if]);
		// [protected ('search.'.concat(unit.instanceName()))]
		// [/protected]
//	$this->redirect(Route::get('[unit.displayedOn.oclAsType(Page).routeName()/]')->uri());
[if (unit.hasEncryptedFeatures())]
        [unit.clearEncryptedFeatures()/]
[/if]
[if (unit.hasInterfaceFields())]
        [unit.rememberInterfaceFields()/]
[/if]
	}
    [unit.catchValidationException()/]
[if (unit.hasCaptchaFields())]
    [unit.catchCaptchaException()/]
[/if]
}
[/let]
[/template]