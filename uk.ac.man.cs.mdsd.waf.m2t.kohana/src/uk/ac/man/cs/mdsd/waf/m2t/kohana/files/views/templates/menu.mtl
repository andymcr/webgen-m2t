[comment encoding = UTF-8 /]
[module menu(
	'http://www.cs.man.ac.uk/mdsd/2015/WebApplicationFramework')]
[import uk::ac::man::cs::mdsd::waf::m2t::core::featureProperties/]
[import uk::ac::man::cs::mdsd::waf::m2t::kohana::files/]
[import uk::ac::man::cs::mdsd::waf::m2t::kohana::names/]


[template public generateMenu(menu : Menu)]
[file(menu.menuFilename(), false)]
<section  class="[menu.styleClass()/]" id="[menu.instanceName()/]">
 [menu.generateMenuEntries()/]
</section>
[/file]
[/template]


[template private generateMenuEntries(menu : Menu)
	? (menu.oclIsTypeOf(DynamicMenu)) post(trim())]
[let dynamicMenu : DynamicMenu = menu.oclAsType(DynamicMenu)]
[if (dynamicMenu.dynamicTitle.oclIsUndefined())]
<h1 class="[dynamicMenu.captionClass/][if (dynamicMenu.omitCaption)] hidden[/if]">[dynamicMenu.displayLabel/]</h1>
[else]
<h1 class="[dynamicMenu.captionClass/][if (dynamicMenu.omitCaption)] hidden[/if]"><?php echo $[dynamicMenu.instanceName()/]->[dynamicMenu.dynamicTitle.modelPropertyName()/]; ?></h1>
[/if]
<ul class="[dynamicMenu.layoutClass/]">
 [menu.entries.generateMenuEntry()/]
</ul>
[/let]
[/template]

[template private generateMenuEntries(menu : Menu)
	? (menu.oclIsTypeOf(StaticMenu)) post(trim())]
[let staticMenu : StaticMenu = menu.oclAsType(StaticMenu)]
<h1 class="[staticMenu.captionClass/][if (staticMenu.omitCaption)] hidden[/if]">[staticMenu.displayLabel/]</h1>
<ul class="[staticMenu.layoutClass/]">
 [menu.entries.generateMenuEntry()/]
</ul>
[/let]
[/template]


[template private generateMenuEntry(entry : MenuEntry)
	? (entry.oclIsTypeOf(FixedPageMenuEntry)) post(trim())]
[let fixedEntry : FixedPageMenuEntry = entry.oclAsType(FixedPageMenuEntry)]
<li><?php
	echo HTML::anchor(
		Route::get('[fixedEntry.page.controllerName()/]')->uri(),
		HTML::chars(__('[fixedEntry.displayLabel/]')));
?></li>
[/let]
[/template]

[template private generateMenuEntry(entry : MenuEntry)
	? (entry.oclIsTypeOf(FixedActionMenuEntry)) post(trim())]
[let fixedEntry : FixedActionMenuEntry = entry.oclAsType(FixedActionMenuEntry)]
<li><?php
	echo HTML::anchor(
		Route::get('[fixedEntry.action.pageDisplayedOn().controllerName()/]')->uri(array(
			'action' => '[fixedEntry.action.actionName()/]'
		)),
		HTML::chars(__('[fixedEntry.displayLabel/]')));
?></li>
[/let]
[/template]

[template private generateMenuEntry(entry : MenuEntry)
	? (entry.oclIsTypeOf(FixedCommandMenuEntry)) post(trim())]
[let fixedEntry : FixedCommandMenuEntry = entry.oclAsType(FixedCommandMenuEntry)]
<li><?php
		HTML::chars(__('[fixedEntry.displayLabel/]'));
?></li>
[/let]
[/template]