[comment encoding = UTF-8 /]
[module controlMethods(
	'http://www.cs.man.ac.uk/mdsd/2015/WebApplicationFramework')]
[import uk::ac::man::cs::mdsd::waf::m2t::core::featureProperties/]
[import uk::ac::man::cs::mdsd::waf::m2t::kohana::names/]
[import uk::ac::man::cs::mdsd::waf::m2t::kohana::files::controllers::commonMethods/]


[template public generateUnitVariables(unit : ContentUnit)
	? (unit.oclIsKindOf(ControlUnit)) post(trim())]
[let controlUnit : ControlUnit = unit.oclAsType(ControlUnit)]
$this->[controlUnit.instanceName()/] = ORM::factory('[controlUnit.modelName()/]');
[if (controlUnit.hasDefaultValueFields())]
[controlUnit.unitDefaultValues()/]
[/if]
[/let]
[/template]

[template public generateUnitDisplay(unit : ContentUnit)
	? (unit.oclIsTypeOf(ActionUnit) or unit.oclIsTypeOf(SearchUnit)) post(trim())]
[let controlUnit : ControlUnit = unit.oclAsType(ControlUnit)]
$this->[controlUnit.templateInstanceName()/]->bind('[controlUnit.instanceName()/]', $this->[controlUnit.instanceName()/]);
if (isset($this->[controlUnit.instanceName()/]_field_errors))
	$this->[controlUnit.templateInstanceName()/]->bind('[controlUnit.instanceName()/]_field_errors', $this->[controlUnit.instanceName()/]_field_errors);
[for (association : UnitAssociation | controlUnit.associationFields())]
$[association.optionsName()/] = array([if (association.isSingleton())]'' => __('Please select')[/if]);
foreach (ORM::factory('[association.serviceFeature.modelName()/]')->[if (association.selection.oclIsUndefined())]
find_all()[else]
[association.selection.instanceName()/](FALSE)[/if] AS $option)
	$[association.optionsName()/]['['/]$option->id[']'/] = $option->defaultLabel();
$this->[controlUnit.templateInstanceName()/]->bind('[association.optionsName()/]', $[association.optionsName()/]);
[/for]
[/let]
[/template]


[template public handleCancel(unit : DynamicUnit) post(trim())]
[let cancelDestination : Page = 
	if unit.oclIsKindOf(ControlUnit) then
		unit.oclAsType(ControlUnit).cancelDestination
	else
		unit.oclAsType(EditUnit).cancelDestination
	endif]
if ($this->request->post('cancel'))
	$this->redirect(Route::get('[cancelDestination.routeName()/]')->uri());
[/let]
[/template]


[template public generateValidateOnlyControlFields(unit : DynamicUnit) post(trim())]
$this->[unit.instanceName()/]->control_fields(array([for (field : UnitField | unit.displayFields->select(f | f.oclIsKindOf(UnitFeature))) separator(', ')]
'[field.modelPropertyName()/]' => ''[/for]));
[/template]
