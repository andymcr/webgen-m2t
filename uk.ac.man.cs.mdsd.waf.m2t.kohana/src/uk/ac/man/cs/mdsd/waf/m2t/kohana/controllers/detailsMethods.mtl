[comment encoding = UTF-8 /]
[module detailsMethods(
	'http://www.cs.man.ac.uk/mdsd/2015/WebApplicationFramework')]
[import uk::ac::man::cs::mdsd::waf::m2t::core::featureProperties/]
[import uk::ac::man::cs::mdsd::waf::m2t::kohana::names/]
[import uk::ac::man::cs::mdsd::waf::m2t::kohana::controllers::commonMethods/]


[template public beforeMethod(unit : ContentUnit)
	? (unit.oclIsKindOf(DetailsUnit)) post(trim())]
[let detailsUnit : DetailsUnit = unit.oclAsType(DetailsUnit)]
[/let]
[/template]

[template public afterMethod(unit : ContentUnit)
	? (unit.oclIsKindOf(DetailsUnit)) post(trim())]
[let detailsUnit : DetailsUnit = unit.oclAsType(DetailsUnit)]
[if (detailsUnit.onlyDisplayWhenNotEmpty)]
[detailsUnit.createVariableIfAbsent()/]
if ($this->[detailsUnit.service.instanceName()/]->loaded() || isset($this->[detailsUnit.service.errorName()/]))
{
    [detailsUnit.createAndBindTemplate()/]
    [detailsUnit.bindVariable(false)/]
    [detailsUnit.bindErrorMessage()/]
    [detailsUnit.createAndBindRouteParameters()/]
}
[else]
[detailsUnit.createAndBindTemplate()/]
[detailsUnit.bindVariable(true)/]
[detailsUnit.bindErrorMessage()/]
[detailsUnit.createAndBindRouteParameters()/]
[/if]
[/let]
[/template]


[template public unitMethods(unit : ContentUnit)
	? (unit.oclIsTypeOf(DetailsUnit)) post(trim())]
[let detailsUnit : DetailsUnit = unit.oclAsType(DetailsUnit)]
[detailsUnit.actionMethod()/]

[/let]
[/template]

[template private actionMethod(unit : DetailsUnit) post(trim())]
public function action_[unit.actionName()/]()
{
    try
    {
        $this->[unit.service.loadMethodName()/]();
    }
    [unit.catchSelectionException()/]
[if (not unit.defaultSelection.oclIsUndefined())]
//        $this->[unit.instanceName()/]->[unit.defaultSelection.instanceName()/]();
[if (unit.hasDefaultValueFields())]
//    [unit.unitDefaultValues()/]
[/if]
[/if]
}
[/template]