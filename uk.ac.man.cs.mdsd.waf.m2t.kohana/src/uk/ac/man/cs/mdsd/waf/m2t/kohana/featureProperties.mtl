[comment encoding = UTF-8 /]
[module featureProperties(
	'http://www.cs.man.ac.uk/mdsd/2015/WebApplicationFramework')]
[import uk::ac::man::cs::mdsd::waf::m2t::core::featureProperties/]


[query public hasParameterisedUnitsKohana(page : Page) : Boolean
	= page.parameterisedUnitsKohana()->notEmpty()
/]

[query public parameterisedUnitsKohana(page : Page) : OrderedSet(DynamicUnit)
	= page.units->select(u | u.isParameterisedKohana())
/]

[query public isParameterisedKohana(unit : ContentUnit) : Boolean 
	= if unit.oclIsKindOf(DataUnit) then 
			true -- unit.oclAsType(DataUnit).selection.oclIsUndefined() 
		else 
			unit.oclIsKindOf(EditUnit) 
		endif 
/]


[query public uriPath(page : Page) : String
	= let path : String = page.path
		in if page.parentPage.oclIsUndefined() then
			path
		else if page.parentPage = page.partOf.homePage() then
			path
		else
			page.parentPage.uriPath().concat(path)
		endif endif
/]


[query public hasUnitMethods(unit : ContentUnit) : Boolean
	= if unit.oclIsTypeOf(CommandUnit) then
			true
		else if unit.oclIsKindOf(EditUnit) then
			true
		else if unit.oclIsKindOf(DataUnit) then
			unit.oclAsType(DataUnit).hasUriActions() or unit.oclIsTypeOf(DetailsUnit)
		else if unit.oclIsTypeOf(ActionUnit) then
			true
		else if unit.oclIsKindOf(AuthenticationUnit) then
			true
		else
			false
		endif endif endif endif endif
/]

[query public uriPath(unit : ContentUnit) : String
	= unit.pageDisplayedOn().uriPath().concat(
		if not unit.oclIsKindOf(Selectable) then
			''
		else
			unit.oclAsType(Selectable).parameters->collect(f | f.name)->sep('/<', '>/<', '>')->toString()
		endif).concat(
			if unit.path.oclIsUndefined() then
				''
			else if unit.path = '' then
				''
			else
				'/'.concat(unit.path)
			endif endif)
/]

