[comment encoding = UTF-8 /]
[module detailsMethods(
	'http://www.cs.man.ac.uk/mdsd/2015/WebApplicationFramework')]
[import uk::ac::man::cs::mdsd::waf::m2t::core::featureProperties/]
[import uk::ac::man::cs::mdsd::waf::m2t::kohana::names/]
[import uk::ac::man::cs::mdsd::waf::m2t::kohana::files::controllers::commonMethods/]


[template public beforeMethod(unit : ContentUnit)
	? (unit.oclIsKindOf(DetailsUnit)) post(trim())]
[let detailsUnit : DetailsUnit = unit.oclAsType(DetailsUnit)]
$this->[unit.instanceName()/] = ORM::factory('[unit.modelName()/]');
[/let]
[/template]

[template public afterMethod(unit : ContentUnit)
	? (unit.oclIsKindOf(DetailsUnit)) post(trim())]
[let detailsUnit : DetailsUnit = unit.oclAsType(DetailsUnit)]
[if (detailsUnit.onlyDisplayWhenNotEmpty)]
if ($this->[unit.instanceName()/]->loaded() || isset($this->[detailsUnit.errorName()/]))
{
    [detailsUnit.createAndBindTemplate()/]
    $[detailsUnit.templateInstanceName()/]->bind('[detailsUnit.instanceName()/]', $this->[detailsUnit.instanceName()/]);
    [detailsUnit.bindErrorMessage()/]
}
[else]
[detailsUnit.createAndBindTemplate()/]
$[detailsUnit.templateInstanceName()/]->bind('[detailsUnit.instanceName()/]', $this->[detailsUnit.instanceName()/]);
[detailsUnit.bindErrorMessage()/]
[/if]
[/let]
[/template]


[template public unitMethods(unit : ContentUnit)
	? (unit.oclIsTypeOf(DetailsUnit)) post(trim())]
[let detailsUnit : DetailsUnit = unit.oclAsType(DetailsUnit)]
[detailsUnit.actionMethod()/]

[for (action : InlineAction | detailsUnit.uriActions())]
[action.generateActionMethod('$this->'.concat(detailsUnit.instanceName()).concat('_error'))/]
[/for]
[/let]
[/template]

[template private actionMethod(unit : DetailsUnit)]
public function action_[unit.actionName()/]()
{
    [unit.loadSelection()/]
[if (not unit.defaultSelection.oclIsUndefined())]
	[if (unit.service.keys->size() > 0)]
    else
    {
        $this->[unit.instanceName()/]->[unit.defaultSelection.instanceName()/]();
        [unit.detectInvalidSelection()/]
    }
	[else]
    $this->[unit.instanceName()/]->[unit.defaultSelection.instanceName()/]();
    [unit.detectInvalidSelection()/]
	[/if]
[/if]
[if (unit.hasDefaultValueFields())]
    [unit.unitDefaultValues()/]
[/if]
}
[/template]