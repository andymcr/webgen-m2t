[comment encoding = UTF-8 /]
[module commandMethods(
	'http://www.cs.man.ac.uk/mdsd/2013/Criteria',
	'http://www.cs.man.ac.uk/mdsd/2015/WebApplicationFramework')]
[import uk::ac::man::cs::mdsd::waf::m2t::core::featureProperties/]
[import uk::ac::man::cs::mdsd::waf::m2t::kohana::criteria/]
[import uk::ac::man::cs::mdsd::waf::m2t::kohana::names/]
[import uk::ac::man::cs::mdsd::waf::m2t::kohana::files::controllers::commonMethods/]
[import uk::ac::man::cs::mdsd::waf::m2t::kohana::files::controllers::controlMethods/]


[template public generateUnitVariables(unit : ContentUnit)
	? (unit.oclIsTypeOf(CommandUnit)) post(trim())]
[let commandUnit : CommandUnit = unit.oclAsType(CommandUnit)]
[/let]
[/template]

[template public generateUnitDisplay(unit : ContentUnit)
	? (unit.oclIsTypeOf(CommandUnit)) post(trim())]
[let commandUnit : CommandUnit = unit.oclAsType(CommandUnit)]
[/let]
[/template]


[template public generateUnitMethods(unit : CommandUnit) post(trim())]
[for (command : Command | unit.commands)]
public function action_[command.actionName()/]() {
	[if (command.oclIsTypeOf(UserCommand))]
	/* [protected ('command.'.concat(command.name))]
	 */
	/* [/protected]
	 */
	[/if]
}

[/for]
[/template]