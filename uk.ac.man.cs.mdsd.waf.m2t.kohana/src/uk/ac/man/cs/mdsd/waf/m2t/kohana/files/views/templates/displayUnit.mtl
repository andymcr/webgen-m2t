[comment encoding = UTF-8 /]
[module displayUnit(
	'http://www.cs.man.ac.uk/mdsd/2010/ObjectRelationalMapping',
	'http://www.cs.man.ac.uk/mdsd/2015/WebApplicationFramework')]
[import uk::ac::man::cs::mdsd::orm::m2t::core::featureProperties/]
[import uk::ac::man::cs::mdsd::waf::m2t::core::featureProperties/]
[import uk::ac::man::cs::mdsd::waf::m2t::kohana::featureProperties/]
[import uk::ac::man::cs::mdsd::waf::m2t::kohana::files/]
[import uk::ac::man::cs::mdsd::waf::m2t::kohana::labels/]
[import uk::ac::man::cs::mdsd::waf::m2t::kohana::names/]


[template public generateUnitView(unit : ContentUnit)
	? (unit.oclIsKindOf(DataUnit)) post(trim())]
[let dataUnit : DataUnit = unit.oclAsType(DataUnit)]
[let accessor : String = '$'.concat(dataUnit.instanceName())]
[file(dataUnit.viewFilename(), false)]
<section class="[dataUnit.styleClass/]<?php
	if (isset($[dataUnit.errorName()/])) {
		echo ' [dataUnit.errorClass/]';
	}
?>" id="[dataUnit.instanceName()/]">
 <h1 class="[dataUnit.captionClass/][if (dataUnit.omitCaption)] hidden[/if]">[dataUnit.unitTitle('$'.concat(dataUnit.instanceName()))/]</h1>
 <section class="[dataUnit.errorClass/]<?php if (empty($[dataUnit.errorName()/])) echo ' hidden'; ?>">
  <p class="[dataUnit.errorClass/]"><?php echo __(!empty($[dataUnit.errorName()/]) ? $[dataUnit.errorName()/] : ''); ?></p>
 </section>
[if (not dataUnit.oclIsKindOf(IndexUnit))]
 [dataUnit.generateViewContent(accessor)/]
	[if (dataUnit.supportActions->notEmpty())]
  [dataUnit.unitSupportLinks(accessor)/]
	[/if]
[else]
[let indexUnit : IndexUnit = dataUnit.oclAsType(IndexUnit)]
 <div class="unit_padding">
  [dataUnit.generateViewContent(accessor)/]
	[if (indexUnit.defaultPaginationSize > 0)]
<?php echo $pagination; ?>
	[/if]
	[if (dataUnit.supportActions->notEmpty())]
  [dataUnit.unitSupportLinks(accessor)/]
	[/if]
 </div>
[/let]
[/if]
</section>
[/file]
[/let]
[/let]
[/template]


[template private unitTitle(unit : DataUnit, unitAccessor : String)
	? (unit.oclIsTypeOf(IndexGridUnit) or unit.title.oclIsUndefined())  post(trim())]
[unit.displayLabel/]
[/template]

[template private unitTitle(unit : DataUnit, unitAccessor : String)
	? (not unit.title.oclIsUndefined())  post(trim())]
[let labelAccessor : String
	= if unit.title.oclIsKindOf(Attribute) then
			unitAccessor.concat('->').concat(unit.title.oclAsType(Attribute).modelPropertyName())
		else
			unitAccessor
		endif]
<?php echo HTML::chars([unit.title.label(labelAccessor)/]); ?>
[/let]
[/template]


[template private unitSupportLinks(unit : DynamicUnit, accessor : String) post(trim())]
 <?php
    echo Form::open(
        Route::get('[unit.supportRouteName()/]')->uri(array(
            [unit.routeSelectionParameters(accessor, unit.renameRouteParameters())/]
        ))[if (unit.pageDisplayedOn().hasParameterisedUnits())]
 . URL::query($query_parameters, FALSE)[/if],
        array(
            'id' => '[unit.instanceName()/]',
            'class' => '[unit.controlClass/]'
        )) . PHP_EOL;
[for (action : UnitSupportAction | unit.supportActions)]
    [action.unitSupportLink()/] . PHP_EOL;
[/for]
    echo Form::close() . PHP_EOL;
?>
[/template]

[template public unitSupportLink(action : UnitSupportAction) post(trim())]
echo Form::submit('[action.actionName()/]', '[action.displayLabel/]'[if (not action.confirmMessage.oclIsUndefined())], array(
        'onclick' => 'return confirm(\'' . __('[action.confirmMessage/]') . '\');'
    )[/if])
[/template]


[template public generateViewContent(unit : ContentUnit, accessor : String)
	? (unit.oclIsTypeOf(DetailsUnit)) post(trim())]
[let detailsUnit : DetailsUnit = unit.oclAsType(DetailsUnit)]
[detailsUnit.detailsContent(accessor)/]
[/let]
[/template]

[template public detailsContent(unit : DataUnit, accessor : String)
	post(trim())]
[if (unit.hasOmitFieldLabels())]
<ul class="[unit.layoutClass/]">
[else]
<dl class="[unit.layoutClass/]">
[/if]
[for (field : UnitField | unit.displayFields)]
[let fieldAccessor : String = accessor.concat('->').concat(field.modelPropertyName())]
	[if (field.conditionalDisplay())]
		[if (field.oclIsKindOf(UnitElement))]
 <?php if (!empty([field.getValue(accessor)/])) { ?>
		[else]
 <?php if ([field.getValue(accessor)/]) { ?>
		[/if]
	[/if]
	[if (unit.hasOmitFieldLabels())]
 <li class="[field.displayClass()/]">[field.displayValue(fieldAccessor)/]</li>
	[else]
 <dt class="[field.displayClass()/]">[field.displayLabel()/]</dt>
 <dd class="[field.displayClass()/]">[field.displayValue(fieldAccessor)/]</dd>
	[/if]
	[if (field.conditionalDisplay())]
  <?php } ?>
	[/if]
[/let]
[/for]
[if (unit.hasOmitFieldLabels())]
</ul>
[else]
</dl>
[/if]
[/template]

[template protected generateViewContent(unit : DataUnit, accessor : String)
	? (unit.oclIsTypeOf(IndexLineDirectionUnit)) post(trim())]
[let indexUnit : IndexLineDirectionUnit = unit.oclAsType(IndexLineDirectionUnit)]
<ul class="[indexUnit.layoutClass/]">
<?php foreach ([accessor/] as $entry): ?>
 <li>
[if (not indexUnit.omitCaption)]
  <section>
   <h1 class="[indexUnit.captionClass/]">[indexUnit.unitTitle('$entry')/]</h1>
[/if]
[for (field : UnitField | indexUnit.displayFields) ]
[let fieldAccessor : String = '$entry'.concat('->').concat(field.modelPropertyName())]
	[if (field.conditionalDisplay())]
		[if (field.oclIsKindOf(UnitElement))]
<?php if (!empty([field.getValue(fieldAccessor)/])) { ?>
		[else]
<?php if ([field.getValue(fieldAccessor)/]) { ?>
		[/if]
	[/if]
<span class="[field.modelPropertyName()/]">[field.displayValue(fieldAccessor)/]</span>
	[if (field.conditionalDisplay())]
<?php } ?>
	[/if]
[/let]
[/for]
[if (indexUnit.actions->notEmpty())]
<span class="actions">
	[for (action : InlineAction | indexUnit.actions)]
		[action.actionLink('$entry')/]
	[/for]</span>
[else]

[/if]
[if (not indexUnit.omitCaption)]
  </section>
[/if]
 </li>
<?php endforeach ?>
</ul>
[/let]
[/template]

[template protected generateViewContent(unit : DataUnit, instanceVariable : String)
	? (unit.oclIsTypeOf(IndexPageDirectionUnit)) post(trim())]
[let indexUnit : IndexPageDirectionUnit = unit.oclAsType(IndexPageDirectionUnit)]
<ul class="[indexUnit.layoutClass/]">
<?php foreach ([instanceVariable/] as $entry): ?>
 <li>
[if (not indexUnit.omitCaption)]
  <section>
   <h1 class="[indexUnit.captionClass/]">[indexUnit.unitTitle('$entry')/]</h1>
[/if]
  [unit.detailsContent('$entry')/]
[if (indexUnit.actions->notEmpty())]
  <td class="actions">
	[for (action : InlineAction | indexUnit.actions)]
		[action.actionLink('$entry')/]
	[/for]</td>
[/if]
[if (not indexUnit.omitCaption)]
  </section>
[/if]
 </li>
<?php endforeach ?>
</ul>
[/let]
[/template]

[template public generateViewContent(unit : DataUnit, instanceVariable : String)
	? (unit.oclIsTypeOf(IndexGridUnit)) post(trim())]
[let indexUnit : IndexGridUnit = unit.oclAsType(IndexGridUnit)]
<table class="[indexUnit.layoutClass/]">
[if (not indexUnit.omitColumnLabels)]
 <thead class="[indexUnit.headerClass/]">
  <tr>
 	[for (field : UnitField | indexUnit.displayFields)]
   <th>[field.displayLabel()/]</th>
 	[/for]
	[if (indexUnit.actions->notEmpty())]
   <th>Actions</th>
	[/if]
  </tr>
 </thead>
[/if]
 <tbody>
<?php foreach ([instanceVariable/] as $entry): ?>
  <tr class="<?php echo Text::alternate([for (class : String | indexUnit.rowClasses()) separator (', ')]'[class/]'[/for]); ?>">
 [for (field : UnitField | indexUnit.displayFields)]
[let fieldAccessor : String = '$entry'.concat('->').concat(field.modelPropertyName())]
   <td class="[field.styleClass()/]">[field.displayValue(fieldAccessor)/]</td>
[/let]
[/for]
[if (indexUnit.actions->notEmpty())]
   <td class="actions">
	[for (action : InlineAction | indexUnit.actions)]
    [action.actionLink('$entry')/]
	[/for]</td>
 [/if]
  </tr>
<?php endforeach ?>
 </tbody>
</table>
[/let]
[/template]


[template public displayValue(field : UnitField, accessor : String)
	? (field.isDataTypeSingleton() and not field.isBooleanDataType()) post(trim())]
[let feature : UnitFeature = field.oclAsType(UnitFeature)]
[if (feature.actions->isEmpty())]
<?php
	[if (feature.maximumDisplaySize > 0)]
	[let maxSize : Integer = feature.maximumDisplaySize]
	if (strlen([feature.getValue(accessor)/]) > [maxSize/])
		$[feature.name/] = substr([feature.getValue(accessor)/], 0, [maxSize/] - 3) . '...';
	else
		$[feature.name/] = [feature.getValue(accessor)/];
	echo HTML::chars($[feature.name/]);
	[/let]
	[elseif (feature.isBooleanDataType())]
	echo [feature.getValue(accessor)/];
	[else]
	echo HTML::chars([feature.getValue(accessor)/]);
	[/if]
?>
[else]
[let action : InlineAction = feature.actions->first()]
[let targetController : Page = action.controller()]
[let targetUnit : DynamicUnit = action.oclAsType(SelectAction).target.oclAsType(DynamicUnit)]
<?php
	[if (feature.maximumDisplaySize > 0)]
	[let maxSize : Integer = feature.maximumDisplaySize]
	if (strlen([feature.getValue(accessor)/]) > [maxSize/])
		$[feature.name/] = substr([feature.getValue(accessor)/], 0, [maxSize/] - 3) . '...';
	else
		$[feature.name/] = [feature.getValue(accessor)/];
	[/let]
	[/if]
	echo HTML::anchor(
		Route::get('[targetController.routeName()/]')->uri() . URL::query(array(
				'[targetUnit.parameterName()/]' => [if (field.displayedOn.oclIsTypeOf(DetailsUnit))]
$[accessor/]->[targetUnit.service.keyName()/]
[else]
$[accessor/]->[field.displayedOn.service.keyName()/]
[/if]
			), FALSE),
		HTML::chars([if (feature.maximumDisplaySize > 0)]
$[feature.name/][else]
[feature.getValue(accessor)/][/if]),
		array(
			'title' => HTML::chars(__('[action.displayLabel/]') . ' ' . [feature.getValue(accessor)/]),
	));
?>
[/let]
[/let]
[/let]
[/if]
[/let]
[/template]

[template public displayValue(field : UnitField, accessor : String)
	? (field.isDateSingleton() or field.isEnumerationTypeSingleton()) post(trim())]
<?php
	echo [field.getValue(accessor)/];
?>
[/template]

[template public displayValue(field : UnitField, accessor : String) 
	? (field.isBooleanDataType()) post(trim())] 
<?php
	echo Form::checkbox('[field.modelPropertyName()/]', '1', (bool) [field.getValue(accessor)/], array( 
		'class' => '[field.styleClass()/] [field.inputClass()/]', 
		'disabled' => '' 
	));
?>
[/template] 
 
[template public displayValue(field : UnitField, accessor : String)
	? (field.isResourceSingleton()) post(trim())]
[let attribute : UnitElement = field.oclAsType(UnitElement)]
<?php
[if (not attribute.conditionalDisplay())]
	if (!empty([attribute.getValue(accessor)/]))
[/if]
		echo HTML::anchor(
			[attribute.getValue(accessor)/],
			'[attribute.displayLabel()/]',
			NULL, NULL, FALSE);
?>
[/let]
[/template]

[template public displayValue(field : UnitField, accessor : String)
	? (field.isAssociationSingleton()) post(trim())]
[let association : UnitAssociation = field.oclAsType(UnitAssociation)]
[if (association.oclAsType(UnitAssociation).units->isEmpty())]
	[if (association.actions->isEmpty())]
<?php
		[if (association.maximumDisplaySize > 0)]
		[let maxSize : Integer = association.maximumDisplaySize]
	if (strlen([association.getValue(accessor)/]) > [maxSize/])
		echo substr([association.getValue(accessor)/], 0, [maxSize/] - 3) . '...';
	else
		echo [association.getValue(accessor)/];
		[/let]
		[else]
	echo [association.getValue(accessor)/];
		[/if]
?>
	[else]
	[let action : InlineAction = association.actions->first()]
	[let targetController : Page = action.controller()]
	[let targetUnit : DynamicUnit = action.oclAsType(SelectAction).target.oclAsType(DynamicUnit)]
<?php
	echo HTML::anchor(
		Route::get('[targetController.routeName()/]')->uri() . URL::query(array(
				'[targetUnit.parameterName()/]' => [if (field.displayedOn.oclIsTypeOf(DetailsUnit))]
[accessor/]->[targetUnit.service.keyName()/]
	[else]
[accessor/]->[field.displayedOn.service.keyName()/]
	[/if]
			), FALSE),
		HTML::chars([association.getValue(accessor)/]),
		array(
			'title' => HTML::chars(__('[action.displayLabel/]') . ' ' . [association.getValue(accessor)/]),
	));
?>
	[/let]
	[/let]
	[/let]
	[/if]
[else]
[let embeddedUnit : ContentUnit = association.units->first()]
[association.units.generateViewContent(accessor)/]
[/let]
[/if]
[/let]
[/template]

[template public displayValue(field : UnitField, accessor : String)
	? (field.oclIsKindOf(UnitAssociation) and not field.isSingleton()) post(trim())]
[let association : UnitAssociation = field.oclAsType(UnitAssociation)]
[if (association.units->isEmpty())]
[if (association.displayOption = CollectionDisplayOptions::PageDirection)]
<?php foreach ([accessor/]->find_all() as $value) {
	?><p><?php echo [association.getValue('$value')/]; ?></p>
<?php } ?>
	[else]
<?php foreach ([accessor/]->find_all() as $value) { ?><span><?php 
		[if (association.actions->isEmpty())]
	echo [association.getValue('$value')/];
		[else]
		[let action : InlineAction = association.actions->first()]
		[let targetController : Page = action.controller()]
	echo HTML::anchor(
		Route::get('[targetController.routeName()/]')->uri() . URL::query(array(
				'[action.oclAsType(SelectAction).target.oclAsType(DynamicUnit).parameterName()/]' => $value->[field.displayedOn.service.keyName()/]
			), FALSE),
		HTML::chars([association.getValue('$value')/]),
		array(
			'title' => HTML::chars(__('[action.displayLabel/]') . ' ' . [association.label.label('$value')/]),
	));
		[/let]
		[/let]
		[/if]
?></span><?php } ?>
	[/if]
[else]
[let embeddedUnit : ContentUnit = association.units->first()]
<?php
	$[field.displayedOn.uniqueName()/] = [accessor/]->[if (not embeddedUnit.oclIsKindOf(IndexUnit))]
find_all()[else][let embeddedIndexUnit : IndexUnit = embeddedUnit.oclAsType(IndexUnit)]
[if (embeddedIndexUnit.defaultSelection.oclIsUndefined())]
find_all()[else]
[embeddedIndexUnit.defaultSelection.instanceName()/](FALSE)[/if][/let][/if];
?>
[association.units.generateViewContent('$'.concat(field.displayedOn.uniqueName()))/]
[/let]
[/if]
[/let]
[/template]


[template public getValue(field : UnitField, accessor : String) post(trim())]
[if (field.oclIsTypeOf(UnitFeature))]
[field.oclAsType(UnitFeature).getValue(accessor)/]
[else]
NULL
[/if]
[/template]

[template public getValue(feature : UnitFeature, accessor : String) post(trim())]
[if (feature.oclIsTypeOf(UnitElement))]
[feature.oclAsType(UnitElement).getValue(accessor)/]
[else]
[feature.oclAsType(UnitAssociation).getValue(accessor)/]
[/if]
[/template]

[template public getValue(attribute : UnitElement, accessor : String) post(trim())]
[attribute.serviceFeature.attribute.getValue(attribute, accessor)/]
[/template]

[template public getValue(association : UnitAssociation, accessor : String) post(trim())]
[if (association.childFeature.oclIsUndefined())]
	[if (not association.label.oclIsUndefined())]
[association.label.label(accessor)/]
	[else]
[accessor/]->defaultLabel()
	[/if]
[else]
[association.childFeature.getValue(accessor)/]
[/if]
[/template]

[template public getValue(childFeature : ServiceFeatureReference, accessor : String)
	? (childFeature.oclIsTypeOf(ServiceAttributeReference)) post(trim())]
[let childAttribute : ServiceAttributeReference = childFeature.oclAsType(ServiceAttributeReference)]
[let childAccessor : String = accessor.concat('->').concat(childAttribute.attribute.modelPropertyName())]
[let unitFeatures : Sequence(UnitFeature) = childFeature.ancestors(UnitFeature)]
[if (unitFeatures->notEmpty())]
[childAttribute.attribute.attribute.getValue(unitFeatures->first(), childAccessor)/]
[else]
[childAttribute.attribute.attribute.getValue(null, childAccessor)/]
[/if]
[/let]
[/let]
[/let]
[/template]

[template public getValue(childFeature : ServiceFeatureReference, accessor : String)
	? (childFeature.oclIsTypeOf(ServiceAssociationReference)) post(trim())]
[let childAssociation : ServiceAssociationReference = childFeature.oclAsType(ServiceAssociationReference)]
[let childAccessor : String = accessor.concat('->').concat(childAssociation.association.modelPropertyName())]
[if (childAssociation.childFeature.oclIsUndefined())]
[childAccessor/]->defaultLabel()
[else]
[childAssociation.childFeature.getValue(childAccessor)/]
[/if]
[/let]
[/let]
[/template]


[template public getValue(feature : Feature, field : UnitField, accessor : String)
	? (feature.isDataTypeSingleton() or feature.isResource()) post(trim())]
[accessor/]
[/template]

[template public getValue(feature : Feature, field : UnitField, accessor : String)
	? (feature.isDateSingleton()) post(trim())]
[if (field.dateFormat.oclIsUndefined())]
[accessor/];
[else]
Helpers_View::date([accessor/], '[field.dateFormat/]');
[/if]
[/template]

[template public getValue(feature : Feature, field : UnitField, accessor : String)
	? (feature.isEnumerationTypeSingleton()) post(trim())]
[let enumerationType : EnumerationType
	= feature.oclAsType(SingletonElement).dataType.oclAsType(EnumerationType)]
[enumerationType.modelClassName()/]::option([accessor/])
[/let]
[/template]


[template public actionLink(action : InlineAction, accessor : String)
	? (action.oclIsTypeOf(SelectAction))  post(trim())]
[let select : SelectAction = action.oclAsType(SelectAction)]
[let targetUnit : DynamicUnit = select.target.oclAsType(DynamicUnit)]
<?php
    echo HTML::anchor(
        Route::get('[targetUnit.routeName()/]')->uri(array(
            [targetUnit.routeSelectionParameters(accessor, targetUnit.renameRouteParameters())/]
		)),
		HTML::chars(__('[action.displayLabel/]')),
		array(
			'title' => HTML::chars(__('[action.displayLabel/]') . ' ' . [accessor/]->defaultLabel()),
	));
?>
[/let]
[/let]
[/template]

[template public routeSelectionParameters(unit : DynamicUnit, accessor : String, renameParameters : Boolean) post(trim())]
[if (not unit.uriParent.oclIsUndefined())]
[let parentAccessor : String = if unit.parentAssociation.oclIsUndefined() then
		accessor
	else
		accessor.concat('->').concat(unit.parentAssociation.modelPropertyName())
	endif]
[unit.uriParent.routeSelectionParameters(parentAccessor, renameParameters)/]
[/let]
[/if]
[if (unit.oclIsKindOf(Selectable))]
	[for (key : ServiceFeatureReference | unit.service.keys)]
'[key.routeParameterName(unit.routeParameterPrepend(renameParameters))/]' => [key.getValue(accessor)/],
	[/for]
[/if]
[/template]