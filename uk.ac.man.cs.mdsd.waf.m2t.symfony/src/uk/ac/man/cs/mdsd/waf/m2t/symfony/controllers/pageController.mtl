[comment encoding = UTF-8 /]
[module pageController(
	'http://www.cs.man.ac.uk/mdsd/2015/WebApplicationFramework')]
[import uk::ac::man::cs::mdsd::waf::m2t::core::featureProperties/]
[import uk::ac::man::cs::mdsd::waf::m2t::core::files/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::files/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::names/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::controllers::authenticationMethods/]
[comment import uk::ac::man::cs::mdsd::jsf::m2t::symfony::files::controllers::createSitemapMethods/]
[comment import uk::ac::man::cs::mdsd::jsf::m2t::symfony::files::controllers::actionMethods/]
[comment import uk::ac::man::cs::mdsd::jsf::m2t::symfony::files::controllers::commandMethods/]
[comment import uk::ac::man::cs::mdsd::jsf::m2t::symfony::files::controllers::commonMethods/]
[comment import uk::ac::man::cs::mdsd::jsf::m2t::symfony::files::controllers::controlMethods/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::controllers::detailsMethods/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::controllers::editMethods/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::controllers::indexMethods/]
[comment import uk::ac::man::cs::mdsd::jsf::m2t::symfony::files::controllers::searchMethods/]
[comment import uk::ac::man::cs::mdsd::jsf::m2t::symfony::files::controllers::staticMethods/]


[template public generateController(page : Page)]
[file(page.controllerFilename(), false)]
<?php
namespace [page.controllersNamespace()/];

use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route;
use Symfony\Bundle\FrameworkBundle\Controller\Controller;
[if (page.hasQueryParameters())]
use Symfony\Component\HttpFoundation\Request;
[/if]
[for (service : Service | page.formUnits().service->asSet())]
use [service.formTypeNamespace()/]\[service.typeClassName()/];
[/for]


class [page.controllerClassName()/] extends [page.baseControllerClassName()/]
{
[for (unit : ContentUnit | page.units)]
    [unit.generateUnitMethods()/]

[/for]
[if (page.hasSupportActions())]
	[if (page.hasDataSupportActions())]
    public function action_support()
    {
	[for (action : UnitSupportAction | page.dataSupportActions())]
		if ($this->request->post('[action.name/]'))
		{
			/* [protected ('support.'.concat(action.name))]
			 */
			/* [/protected]
			 */
		}
	[/for]
	}

	[/if]
	/* [protected (page.instanceName().concat('.support.'))]
	 */
	/* [/protected]
	 */
[/if]
}
[/file]
[/template]
