[comment encoding = UTF-8 /]
[module sidemenu(
	'http://cs.manchester.ac.uk/mdsd/WebApplicationFramework')]
[import uk::ac::man::cs::mdsd::waf::m2t::core::interface/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::files/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::names/]


[template public menu(menu : Menu)]
[file(menu.menuFilename(), false)]
{% trans_default_domain "navigation" %}
<div class="nav-content" id="[menu.instanceName()/]">
 [menu.menuEntries()/]
</div>
[/file]
[/template]


[template private menuEntries(menu : Menu)
	? (menu.oclIsTypeOf(GlobalMenu)) post(trim())]
[let globalMenu : GlobalMenu = menu.oclAsType(GlobalMenu)]
<ul class="tabs tabs-transparent">
[for (entry : MenuEntry | menu.entries)]
 [entry.menuEntry()/]
[/for]
</ul>
[/let]
[/template]


[template private menuEntries(menu : Menu)
	? (menu.oclIsTypeOf(DynamicMenu)) post(trim())]
[let dynamicMenu : DynamicMenu = menu.oclAsType(DynamicMenu)]
[if (dynamicMenu.title.oclIsUndefined())]
<h1 class="[dynamicMenu.captionClass/][if (dynamicMenu.omitCaption)] hidden[/if]">{{ 'label.[dynamicMenu.id()/]' | trans }}</h1>
[else]
<h1 class="[dynamicMenu.captionClass/][if (dynamicMenu.omitCaption)] hidden[/if]">{{ [dynamicMenu.instanceName()/].[comment dynamicMenu dynamicTitle modelPropertyName()/] }}</h1>
[/if]
<ul class="[dynamicMenu.layoutClass/]">
 [menu.entries.menuEntry()/]
</ul>
[/let]
[/template]

[template private menuEntry(entry : MenuEntry)
	? (entry.oclIsTypeOf(ActionMenuEntry)) post(trim())]
[let entry : ActionMenuEntry = entry.oclAsType(ActionMenuEntry)]
[if (not entry.requiresRole.oclIsUndefined())]
{% if is_granted('[entry.requiresRole/]') %}[/if]<li class="tab{% if app.request.attributes.get('_route') == '[entry.action.routeName()/]' %} active{% endif %}">[if (not entry.action.oclIsUndefined())]
<a href="{{ path('[entry.action.routeName()/]'[if (not entry.query.oclIsUndefined())]
, {[for (parameter : QueryParameter | entry.query.parameters) separator(', ')]
'[parameter.formal.name/]': '[parameter.value/]'[/for]}[/if]) }}">{{ '[entry.partOf.id()/].labels.[entry.id()/]' | trans }}</a>[else]
{{ '[entry.partOf.id()/].labels.[entry.id()/]' | trans }}[/if]</li>[if (not entry.requiresRole.oclIsUndefined())]
{% endif %}
[/if]
[/let]
[/template]