[comment encoding = UTF-8 /]
[module collection(
	'http://cs.manchester.ac.uk/mdsd/Service',
	'http://cs.manchester.ac.uk/mdsd/WebApplicationFramework')]
[import uk::ac::man::cs::mdsd::orm::m2t::core::entities/]
[import uk::ac::man::cs::mdsd::orm::m2t::core::features/]
[import uk::ac::man::cs::mdsd::waf::m2t::core::units/]
[import uk::ac::man::cs::mdsd::waf::m2t::core::uriRoutes/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::names/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::uriRoutes/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::templates::action/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::templates::accessor/]


[template public unitFilters(unit : CollectionUnit) post(trim())]
[for(filter : Filter | unit.supportedFilters)]
[filter.unitFilter(unit)/]
[/for]
[/template]

[template private unitFilter(filter : Filter, unit : CollectionUnit) post(trim())]
[let dynamicUnit : DynamicUnit = unit.oclAsType(DynamicUnit)]
<div class="filter">
 <form action="{{ path('[dynamicUnit.routeName()/]', { [if (not dynamicUnit.routingType().oclIsUndefined())]
[dynamicUnit.routeActualParameters(dynamicUnit.routingType(), dynamicUnit.contentType().container(), 
	unit.containerAccessor(), dynamicUnit.hasObjectAccess())/][/if] }) }}" method="get">
[for (parameter : FormalParameter | filter.parameters)]
  <input type="text" name="[parameter.name/]"[if (not parameter.placeholder.oclIsUndefined())]
 placeholder="[parameter.placeholder/]"[/if][if (parameter.defaultValue.oclIsUndefined())]
 required="required"[/if]
 value="{{ app.request.query.get('[parameter.name/]') }}"/>
[/for]
  <input type="submit" name="[filter.name/]Filter" value="[filter.displayLabel/]"/>
 </form>
</div>
[/let]
[/template]


[template public pagination(unit : CollectionUnit) post(trim())]
{%- if pageCount > 1 -%}
<ul class="unit_control[if (unit.paginationClass <> '')] [unit.paginationClass/][/if]">
[if (unit.useFirstLastPageLinks)]
 [unit.firstPageLink()/]
[/if]
 [unit.previousPageLink()/]
[if (unit.previousNpages > 1)]
{% if max(1, currentPage - [unit.previousNpages/]) > 1 %}<li>&hellip;</li>{% endif %}
[/if]
[if (unit.nextNpages > 1 or unit.previousNpages > 1)]
{% for page in max(1, currentPage - [unit.previousNpages/])..min(currentPage + [unit.nextNpages/], pageCount) %}
 <li{% if page == currentPage %} class="active disable"[if (unit.paginationElementClass <> '')]{% else %} class="[unit.paginationElementClass/]"[/if]{% endif %}><a href="[unit.pageHref('page')/]">{{ page }}</a></li>
{% endfor %}
[/if]
[if (unit.nextNpages > 1 and unit.useDisabledPageLinks)]
{% if min(currentPage + [unit.nextNpages/], pageCount) < pageCount %}<li>&hellip;</li>{% endif %}
[/if]
 [unit.nextPageLink()/]
[if (unit.useFirstLastPageLinks)]
 [unit.lastPageLink()/]
[/if]
</ul>
{%- endif -%}
[/template]

[template private firstPageLink(unit : CollectionUnit) post(trim())]
{%- if currentPage != 1 -%}
<li[if (unit.paginationElementClass <> '')] class="[unit.paginationElementClass/]"[/if]><a href="[unit.pageHref('1')/]">[unit.firstPageLinkLabel()/]</a></li>
[if (unit.useDisabledPageLinks)]
{%- else -%}
<li class="disabled"><a href="[unit.pageHref('1')/]">[unit.firstPageLinkLabel()/]</a></li>
[/if]
{%- endif -%}
[/template]

[template private previousPageLink(unit : CollectionUnit) post(trim())]
{%- if currentPage != 1 -%}
<li[if (unit.paginationElementClass <> '')] class="[unit.paginationElementClass/]"[/if]><a href="[unit.pageHref('currentPage - 1')/]">[unit.previousPageLinkLabel()/]</a></li>
[if (unit.useDisabledPageLinks)]
{%- else -%}
<li class="disabled">[unit.previousPageLinkLabel()/]</li>
[/if]
{%- endif -%}
[/template]

[template private previousNPagesLinks(unit : CollectionUnit) post(trim())]
[if (unit.useDisabledPageLinks)]
{% if max(1, currentPage - [unit.previousNpages/]) > 1 %}<li>&hellip;</li>{% endif %}
[/if]
[if (unit.nextNpages > 1 or unit.previousNpages > 1)]
{% for page in max(1, currentPage - [unit.previousNpages/])..min(currentPage + [unit.nextNpages/], pageCount) %}
<li{% if page == currentPage %} class="active disable"[if (unit.paginationElementClass <> '')]{% else %} class="[unit.paginationElementClass/]"[/if]{% endif %}><a href="[unit.pageHref('page')/]">{{ page }}</a></li>
{% endfor %}
[/if]
[/template]

[template private nextNPagesLinks(unit : CollectionUnit) post(trim())]
{%- if currentPage != 1 -%}
<li[if (unit.paginationElementClass <> '')] class="[unit.paginationElementClass/]"[/if]><a href="[unit.pageHref('currentPage - 1')/]">[unit.previousPageLinkLabel()/]</a></li>
[if (unit.useDisabledPageLinks)]
{%- else -%}
<li class="disabled">[unit.previousPageLinkLabel()/]</li>
[/if]
{%- endif -%}
[/template]

[template private nextPageLink(unit : CollectionUnit) post(trim())]
{%- if currentPage != pageCount -%}
<li[if (unit.paginationElementClass <> '')] class="[unit.paginationElementClass/]"[/if]><a href="[unit.pageHref('currentPage + 1')/]">[unit.nextPageLinkLabel()/]</a></li>
[if (unit.useDisabledPageLinks)]
{%- else -%}
<li class="disabled"><a href="[unit.pageHref('currentPage + 1')/]">[unit.nextPageLinkLabel()/]</a></li>
[/if]
{%- endif -%}
[/template]

[template private lastPageLink(unit : CollectionUnit) post(trim())]
{%- if currentPage != pageCount -%}
<li[if (unit.paginationElementClass <> '')] class="[unit.paginationElementClass/]"[/if]><a href="[unit.pageHref('pageCount')/]">[unit.lastPageLinkLabel()/]</a></li>
[if (unit.useDisabledPageLinks)]
{%- else -%}
<li class="disabled"><a href="[unit.pageHref('pageCount')/]">[unit.lastPageLinkLabel()/]</a></li>
[/if]
{%- endif -%}
[/template]

[template private pageHref(unit : CollectionUnit, pageNumber : String) post(trim())]
[if (unit.paginationParent.oclIsUndefined())]
{{ path('[unit.oclAsType(ContentUnit).routeName()/]', app.request.query.all|merge({'[unit.paginationPageParameterName()/]': [pageNumber/][if (not unit.routingType().oclIsUndefined())]
, [unit.oclAsType(ContentUnit).routeActualParameters(unit.contentType().container(), 
	unit.contentType().container(), unit.instanceParentName(), unit.hasObjectAccess())/][/if]})) }}
[else]
{{ path('[unit.oclAsType(ContentUnit).routeName()/]', app.request.query.all|merge({'[unit.paginationPageParameterName()/]': [pageNumber/][if (not unit.routingType().oclIsUndefined())]
, [unit.oclAsType(ContentUnit).routeActualParameters(paginationParent, paginationParent, 
	unit.containerAccessor(), unit.hasObjectAccess())/][/if]})) }}
[/if]
[/template]

[template private firstPageLinkLabel(unit : CollectionUnit) post(trim())]
[linkLabel(unit.firstPageLabel, unit.firstPageIconName)/]
[/template]

[template private previousPageLinkLabel(unit : CollectionUnit) post(trim())]
[linkLabel(unit.previousPageLabel, unit.previousPageIconName)/]
[/template]

[template private nextPageLinkLabel(unit : CollectionUnit) post(trim())]
[linkLabel(unit.nextPageLabel, unit.nextPageIconName)/]
[/template]

[template private lastPageLinkLabel(unit : CollectionUnit) post(trim())]
[linkLabel(unit.lastPageLabel, unit.lastPageIconName)/]
[/template]

[query private containerAccessor(unit : CollectionUnit) : String
	= unit.instanceParentName()
/]