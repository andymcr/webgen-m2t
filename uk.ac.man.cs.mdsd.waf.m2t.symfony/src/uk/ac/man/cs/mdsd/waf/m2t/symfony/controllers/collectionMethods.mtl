[comment encoding = UTF-8 /]
[module collectionMethods(
	'http://cs.manchester.ac.uk/mdsd/ObjectRelationalMapping',
	'http://cs.manchester.ac.uk/mdsd/Service',
	'http://cs.manchester.ac.uk/mdsd/WebApplicationFramework')]
[import uk::ac::man::cs::mdsd::orm::m2t::doctrine::names/]
[import uk::ac::man::cs::mdsd::waf::m2t::core::actions/]
[import uk::ac::man::cs::mdsd::waf::m2t::core::featureProperties/]
[import uk::ac::man::cs::mdsd::waf::m2t::core::files/]
[import uk::ac::man::cs::mdsd::waf::m2t::core::uriRoutes/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::featureProperties/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::files/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::names/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::uriRoutes/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::controllers::commonMethods/]


[template public actionMethod(unit : CollectionUnit) post(trim())]
[let dynamicUnit : DynamicUnit = unit.oclAsType(DynamicUnit)]
[let page : Page = dynamicUnit.pageDisplayedOn()]
/**
 [dynamicUnit.routeAnnotation()/]
 */
public function [dynamicUnit.actionName()/]([page.actionMethodParameters(dynamicUnit, unit.routingType())/])
{
[if (page.units->size() = 1 and not unit.hasInlineDeleteActions())]
    [unit.selectCode()/]

[/if]
[if (page.units->size() > 1 or unit.hasInlineDeleteActions())]
    return $this->renderPage([page.renderActualParameters(unit.routingType())/]);
[else]
    $parameters = array();
    [page.templateParameters()/]
    [unit.templateParameters()/]
    return $this->render('[page.name/]/page[page.htmlExtension()/][page.twigExtension()/]', $parameters);
[/if]
}
[/let]
[/let]
[/template]

[template public selectMethod(unit : CollectionUnit) post(trim())]
private function [unit.selectName()/]([unit.selectMethodParameters(true)/])
{
    [unit.selectCode()/]
}
[/template]

[query public inlineSelectCode(unit : CollectionUnit) : Boolean
	= not unit.hasFilters() and unit.selection.oclIsUndefined()
/]

[template private selectMethodParameters(unit : CollectionUnit) post(trim())]
[unit.selectMethodParameters(false)/]
[/template]

[template private selectMethodParameters(unit : CollectionUnit, formal : Boolean) post(trim())]
[if (unit.oclAsType(DynamicUnit).hasFilterParameters() or unit.oclAsType(DynamicUnit).hasPagination())][if (formal)]
Request [/if]$request[if (not unit.selection.selectVia.oclIsUndefined())]
[if (unit.selection.selectVia.partOf.uriPathKeys()->notEmpty())]
, [/if][/if][/if]
[unit.routingParameters()/]
[/template]

[template private selectionParameters(unit : CollectionUnit) post(trim())]
[if (not unit.selection.selectVia.oclIsUndefined())]
[unit.routingParameters()/][if (unit.selection.selectVia.partOf.hasRouteParameters())]
, [/if][/if][unit.paginationActuals()/]
[/template]

[template private routingParameters(unit : CollectionUnit) post(trim())]
[if (not unit.selection.selectVia.oclIsUndefined())]
[let selectionEntity : EntityOrView = unit.selection.selectVia.partOf]
	[for (key : Attribute | selectionEntity.uriPathKeys()) separator(', ')]
$[key.routeParameterName(selectionEntity)/][/for]
[/let]
[/if]
[/template]

[template private paginationActuals(unit : CollectionUnit) post(trim())]
[unit.paginationActuals(false)/]
[/template]

[template private paginationActuals(unit : CollectionUnit, continuation: Boolean) post(trim())]
[if (unit.defaultPaginationSize > 0)]
[if (continuation)], [/if]($this->page - 1) * [unit.defaultPaginationSize/], [unit.defaultPaginationSize/]
[/if]
[/template]

[template private selectCode(unit : CollectionUnit) post(trim())]
[let dynamicUnit : DynamicUnit = unit.oclAsType(DynamicUnit)]
[if (unit.defaultPaginationSize > 0)]
$this->page = $request->query->getInt('[unit.paginationPageParameterName()/]', 1);
[/if]
[if (unit.hasFilters())]
[unit.filterSelect()/]
else
[/if]
[if (unit.hasFilters())]    [/if][if (not unit.selection.oclIsUndefined())]
	[if (unit.routedSelection())]
		[if (not unit.selection.oclIsUndefined())]
			[if (not unit.selection.selectVia.oclIsUndefined() and unit.defaultPaginationSize > 0)]
$this->[unit.routingType().instanceName()/] = [unit.getSelectionService()/]->find([unit.routingParameters()/]);
			[/if]
		[/if]
$this->[unit.instanceName()/] = [dynamicUnit.getContentService()/]->[unit.selection.methodName/]([unit.selectionParameters()/]);
	[else]
$this->[unit.instanceName()/] = [unit.getSelectionService()/]->[if (not unit.filter.oclIsUndefined())]
[unit.filter.methodName/][else][unit.selection.methodName/][/if]
([unit.selectionParameters()/]);
	[/if]
[elseif (unit.oclIsKindOf(DataUnit))]
[let dataUnit : DataUnit = unit.oclAsType(DataUnit)]
	[if (not dataUnit.defaultSelection.oclIsUndefined())]
$this->[dataUnit.instanceName()/] = [unit.getSelectionService()/]->[dataUnit.defaultSelection.methodName/]([unit.selectionParameters()/]);
	[else]
$this->[dataUnit.instanceName()/] = [dataUnit.getContentService()/]->findAll([unit.paginationActuals()/]);
	[/if]
[/let]
[else]
$this->[unit.instanceName()/] = [dynamicUnit.getContentService()/]->[unit.selection.methodName/]([unit.paginationActuals()/]);
[/if]
[/let]
[/template]

[template private filterSelect(unit : CollectionUnit) post(trim())]
[for (filter : Filter | unit.supportedFilters) separator('else')]
if ($request->query->has('[filter.name/]Filter'))
    [unit.filterCall(filter)/]
[/for]
[/template]

[template private filterCall(unit : CollectionUnit, filter : Filter)]
$this->[unit.instanceName()/] = [unit.oclAsType(DynamicUnit).getContentService()/]->[filter.methodName/](
[for (parameter : FormalParameter | filter.parameters)]
    $request->query->get('[parameter.name/]')[if (i < filter.parameters->size() or filter.selection.joins->isEmpty() or filter.selection.fields->isEmpty())],[/if]
[/for]
[if (filter.selection.joins->isEmpty() or filter.selection.fields->isEmpty())]
    [unit.paginationActuals()/]
[/if]
);
[/template]

[template public templateParameters(unit : CollectionUnit) post(trim())]
[if (unit.oclAsType(DynamicUnit).pageDisplayedOn().units->size() > 1 or unit.hasInlineDeleteActions())]
	[if (unit.inlineSelectCode())]
[unit.selectCode()/]
	[else]
$this->[unit.selectName()/]([unit.selectMethodParameters()/]);
	[/if]
[/if]
[if (not unit.selection.oclIsUndefined())]
	[if (not unit.selection.selectVia.oclIsUndefined() and unit.defaultPaginationSize > 0)]
$parameters['['/]'[unit.routingType().instanceName()/]'[']'/] = $this->[unit.routingType().instanceName()/];
	[/if]
[/if]
$parameters['['/]'[unit.instanceName()/]'[']'/] = $this->[unit.instanceName()/];
[if (unit.defaultPaginationSize > 0)]
$parameters['['/]'currentPage'[']'/] = $this->page;
$parameters['['/]'pageCount'[']'/] = ceil($this->[unit.instanceName()/]->count() / [unit.defaultPaginationSize/]);
[/if]
[/template]
