[comment encoding = UTF-8 /]
[module uriRoutes(
	'http://www.cs.man.ac.uk/mdsd/2010/ObjectRelationalMapping',
	'http://www.cs.man.ac.uk/mdsd/2015/WebApplicationFramework')]
[import uk::ac::man::cs::mdsd::orm::m2t::core::featureProperties/]
[import uk::ac::man::cs::mdsd::orm::m2t::doctrine::names/]
[import uk::ac::man::cs::mdsd::waf::m2t::core::featureProperties/]
[import uk::ac::man::cs::mdsd::waf::m2t::core::uriRoutes/]


[query private combinePaths(path1 : String, path2 : String) : String
	= if path1 = '' then
			path2
		else if path2.oclIsUndefined() then
			path1
		else if path2 = '' then
			path1
		else
			path1.concat('/').concat(path2)
		endif endif endif
/]

[query private appendContainingAssociation(path : String, keyEntity : EntityOrView) : String
	= if keyEntity.containingAssociation().oclIsUndefined() then
			path
		else
			path.combinePaths(keyEntity.containingAssociation().opposite.name)
		endif
/]

[template public routeParameters(entityOrView : EntityOrView) post(trim())]
[entityOrView.routeParameters(false)/]
[/template]

[template public routeParameters(entityOrView : EntityOrView, parentPath : Boolean) post(trim())]
[for (key : Attribute | entityOrView.uriPathKeys(parentPath)) separator (', ')]
$[key.routeParameterName(entityOrView)/][/for]
[/template]

[template public filteredRouteParameters(unit : DynamicUnit) post(trim())]
[unit.filteredRouteParameters(false)/]
[/template]

[template public filteredRouteParameters(unit : DynamicUnit, parentPath : Boolean) post(trim())]
[for (key : Attribute | unit.filteredUriPathKeys(parentPath)) separator (', ')]
$[key.routeParameterName(unit.entities->first())/][/for]
[/template]

[query public routeParameterName(attribute : Attribute, entityOrView : EntityOrView) : String
	= if entityOrView.uriPathKeys()->select(k | k.name.toLowerCase() = attribute.name.toLowerCase())->size() < 2 then
			attribute.name
		else
			attribute.partOf.modelName().toLowerFirst()
				.concat(attribute.name.toUpperFirst())
		endif
/]


[query public uriPathValidatedKeys(unit : ContentUnit) : Sequence(Attribute)
	= unit.uriPathValidatedKeys(false)
/]

[query public uriPathValidatedKeys(unit : ContentUnit, parentPath : Boolean) : Sequence(Attribute)
	= unit.uriPathKeys(parentPath)
		->select(k | not k .validationPattern.oclIsUndefined())
		->select(k | k.validationPattern <> '[^/]+')
/]

[query public hasValidatedRouteParameters(unit : ContentUnit) : Boolean
	= unit.hasValidatedRouteParameters(false)
/]

[query public hasValidatedRouteParameters(unit : ContentUnit, parentPath : Boolean) : Boolean
	= unit.uriPathValidatedKeys(parentPath)->notEmpty()
/]


[query private keyPath(entityOrView : EntityOrView, base : EntityOrView) : String
	= if entityOrView.attributeKeys()->isEmpty() then
			''
		else
			entityOrView.attributeKeys()
				->collect(k | k.routeParameterName(base))->sep('{', '}/{', '}')->toString()
		endif
/]

[query private filteredKeyPath(entityOrView : EntityOrView, unit : DynamicUnit, base : EntityOrView) : String
	= if entityOrView.filteredAttributeKeys(unit)->isEmpty() then
			''
		else
			entityOrView.filteredAttributeKeys(unit)
				->collect(k | k.routeParameterName(base))->sep('{', '}/{', '}')->toString()
		endif
/]

[query private parentPath(keyEntity : EntityOrView, base : EntityOrView) : String
	= if not keyEntity.isContained() then
			''
		else
			keyEntity.container().uriPath(base)
		endif
/]

[query private filteredParentPath(keyEntity : EntityOrView, unit : DynamicUnit, base : EntityOrView) : String
	= if not keyEntity.isContained() then
			''
		else
			keyEntity.container().filteredUriPath(unit, base)
		endif
/]

[query public uriPath(entityOrView : EntityOrView) : String
	= entityOrView.uriPath(entityOrView)
/]

[query private uriPath(entityOrView : EntityOrView, base : EntityOrView) : String
	= let keyEntity : EntityOrView = entityOrView.keyEntity()
		in if keyEntity.oclIsUndefined() then
				''
			else
				keyEntity.parentPath(base)
					.appendContainingAssociation(keyEntity)
					.combinePaths(keyEntity.keyPath(base))
			endif
/]

[query public filteredUriPath(entityOrView : EntityOrView, unit : DynamicUnit) : String
	= entityOrView.filteredUriPath(unit, entityOrView)
/]

[query private filteredUriPath(entityOrView : EntityOrView, unit : DynamicUnit, base : EntityOrView) : String
	= let keyEntity : EntityOrView = entityOrView.keyEntity()
		in if keyEntity.oclIsUndefined() then
				''
			else
				keyEntity.filteredParentPath(unit, base)
					.appendContainingAssociation(keyEntity)
					.combinePaths(keyEntity.filteredKeyPath(unit, base))
			endif
/]

[query private parentEntityUriPath(entityOrView : EntityOrView, unit : DynamicUnit, filter : Boolean) : String
	= let keyEntity : EntityOrView = entityOrView.keyEntity()
		in if keyEntity.oclIsUndefined() then
				''
			else
				let parentPath : String
					= if filter then
							keyEntity.filteredParentPath(unit, entityOrView)
						else
							keyEntity.parentPath(entityOrView)
						endif
					in if parentPath = '' then
							''
						else
							parentPath.appendContainingAssociation(keyEntity)
						endif
		endif
/]

[query private entityUriPath(unit : DynamicUnit, filter : Boolean, parentPath : Boolean) : String
	= if unit.entities->isEmpty() then
			''
		else
			let entityOrView : EntityOrView = unit.entities->first()
				in if parentPath then
						entityOrView.parentEntityUriPath(unit, filter)
					else
						if filter then
							entityOrView.filteredUriPath(unit)
						else
							entityOrView.uriPath()
						endif
					endif
		endif
/]

[query public uriPath(unit : ContentUnit, filter : Boolean) : String
	= unit.uriPath(filter, false)
/]

[query public uriPath(unit : ContentUnit, filter : Boolean, create : Boolean) : String
	= let localPath : String
		= let entityPath : String
			= if not unit.oclIsKindOf(DynamicUnit) then
					''
				else
					unit.oclAsType(DynamicUnit).entityUriPath(filter, not unit.oclIsKindOf(Selectable) or create)
				endif
			in entityPath.combinePaths(
					if unit.oclIsTypeOf(CreateUpdateUnit) and create then
						'create'
					else
						unit.uriElement
					endif)
		in unit.pageDisplayedOn().uriPath().combinePaths(localPath)
/]

[query private uriPath(page : Page) : String
	= if page.parentPage.oclIsUndefined() then
			page.uriElement
		else
			page.parentPage.uriPath().combinePaths(page.uriElement)
		endif
/]

[query public supportUriPath(unit : ContentUnit) : String
	= unit.uriPath(false).combinePaths('support')
/]

[query public uriPath(action : DeleteAction) : String
	= action.immediateUnit().pageDisplayedOn().uriPath()
		.combinePaths(action.immediateUnit().entityUriPath(false, false))
        .combinePaths(action.uriElement)
/]

[query public uriPath(action : FeatureSupportAction) : String
	= action.immediateUnit().pageDisplayedOn().uriPath()
		.combinePaths(action.immediateUnit().entityUriPath(false, false))
        .combinePaths(action.uriElement)
/]
