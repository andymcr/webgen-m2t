[comment encoding = UTF-8 /]
[module indexMethods(
	'http://www.cs.man.ac.uk/mdsd/2015/WebApplicationFramework')]
[import uk::ac::man::cs::mdsd::waf::m2t::core::featureProperties/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::names/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::controllers::commonMethods/]


[template public generateUnitDisplay(unit : ContentUnit)
	? (unit.oclIsKindOf(IndexUnit)) post(trim())]
[let indexUnit : IndexUnit = unit.oclAsType(IndexUnit)]
$page = $request->query->getInt('[indexUnit.paginationQuery.parameters->first().name/]', 1);
[for (q : Query | indexUnit.selectQueries()) separator('else ')]
if ([for (parameter : QueryParameter | q.parameters) separator(' || ')]$request->query->has('[parameter.name/]')[/for])
    $[indexUnit.instanceName()/] = $this->get('[indexUnit.service.name/]')->[q.selection.instanceName()/]($page, [indexUnit.defaultPaginationSize/]);
[/for]
[if (indexUnit.hasSelectQueries())]
else
[/if]
[if (not indexUnit.defaultSelection.oclIsUndefined())]
    $[indexUnit.instanceName()/] = $this->get('[indexUnit.service.name/]')->[indexUnit.defaultSelection.instanceName()/]($page, [indexUnit.defaultPaginationSize/]);
[else]
    $[indexUnit.instanceName()/] = $this->getDoctrine()
        ->getRepository('[indexUnit.appBundleName()/]:[indexUnit.service.modelName/]')
        ->findAll();
[/if]
[/let]
[/template]

[template public generateUnitTemplateParameters(unit : ContentUnit)
	? (unit.oclIsKindOf(IndexUnit)) post(trim())]
[let indexUnit : IndexUnit = unit.oclAsType(IndexUnit)]
'[indexUnit.instanceName()/]' => $[indexUnit.instanceName()/],
'currentPage' => $page,
'pageCount' => ceil($[indexUnit.instanceName()/]->count() / [indexUnit.defaultPaginationSize/]),
[/let]
[/template]

[template public generateUnitMethods(unit : DynamicUnit)
	? (unit.oclIsKindOf(IndexUnit)) post(trim())]
[let indexUnit : IndexUnit = unit.oclAsType(IndexUnit)]
[for (action : InlineAction | unit.uriActions())]
[action.generateActionMethod('$this->'.concat(unit.instanceName()).concat('_error'))/]

[/for]
[if (unit.pageDisplayedOn().partOf.ajaxTechnology = AjaxTechnologies::jQuery
		and (indexUnit.defaultPaginationSize > 0))]
public function page()
{
}
[/if]
[/let]
[/template]
