[comment encoding = UTF-8 /]
[module indexMethods(
	'http://www.cs.man.ac.uk/mdsd/2015/WebApplicationFramework')]
[import uk::ac::man::cs::mdsd::waf::m2t::core::featureProperties/]
[import uk::ac::man::cs::mdsd::waf::m2t::core::files/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::names/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::uriRoutes/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::controllers::commonMethods/]


[template public unitMethods(unit : DynamicUnit)
	? (unit.oclIsKindOf(IndexUnit)) post(trim())]
[let indexUnit : IndexUnit = unit.oclAsType(IndexUnit)]
[indexUnit.actionMethod()/]

[if (unit.pageDisplayedOn().units->size() > 1)]
[indexUnit.selectMethod()/]

[/if]
[/let]
[/template]

[template private actionMethod(unit : IndexUnit) post(trim())]
[let page : Page = unit.pageDisplayedOn()]
/**
 * [unit.routeAnnotation()/]
 */
public function [unit.actionName()/]([if (page.hasFilterParameters())]
Request $request[/if])
{
[if (page.units->size() = 1)]
    [unit.selectCode()/]

[/if]
[if (page.units->size() > 1)]
    return $this->renderPage([page.renderMethodParameters()/]);
[else]
    $parameters = array();
    $parameters['['/]'title'[']'/] = '[page.displayLabel/]';
    [unit.templateParameters()/]
    return $this->render('[page.name/]/page[page.htmlExtension()/][page.twigExtension()/]', $parameters);
[/if]
}
[/let]
[/template]

[template private selectMethod(unit : IndexUnit) post(trim())]
private function [unit.selectName()/]([if (unit.hasFilterParameters())]
Request $request[/if])
{
    [unit.selectCode()/]
}
[/template]

[template private selectCode(unit : IndexUnit) post(trim())]
[if (not unit.pagination.oclIsUndefined())]
$this->page = $request->query->getInt('[unit.pagination.parameters->first().name/]', 1);
[/if]
[if (unit.hasFilters())]
[unit.filterSelect()/]
else
[/if]
[if (not unit.defaultSelection.oclIsUndefined())]
[unit.selectionCall(unit.defaultSelection, null)/]
[else]
$this->[unit.instanceName()/] = [unit.getService()/]->findAll();
[/if]
[/template]

[template private filterSelect(unit : IndexUnit) post(trim())]
[for (f : Filter | unit.filters()) separator('else ')]
if ([for (parameter : FilterParameter | f.parameters) separator(' || ')][parameter.queryPresentTest()/][/for])
[unit.filterCall(f)/][/for]
[/template]

[template private queryPresentTest(parameter : FilterParameter) post(trim())]
$request->query->has('[parameter.name/]')
[/template]

[template private filterCall(unit : IndexUnit, f : Filter)]
[if (f.selection.parameters->notEmpty())]
{
	[for (parameter : SelectionParameter | f.selection.parameters)]
	[let actual : FilterParameter = f.matchingActual(parameter)]
		[if (f.selection.parameters->size() = 1)]
    $[parameter.name/] = $request->query->get('[actual.name/]');
		[else]
    $[parameter.name/] = $request->query->has('[actual.name/]')
        ? $request->query->get('[actual.name/]')
        : NULL;
		[/if]
	[/let]
	[/for]
[/if]
    [unit.selectionCall(f.selection, f)/]
[if (f.selection.parameters->notEmpty())]
}
[/if]
[/template]

[template private selectionCall(unit : IndexUnit, selection : Selection, f : Filter)]
$this->[unit.instanceName()/] = [unit.getService()/]->[selection.instanceName()/]([unit.selectionActuals(f)/]);
[/template]

[template private selectionActuals(unit : IndexUnit, f : Filter) post(trim())]
[if (not f.oclIsUndefined())]
	[if(f.selection.parameters->notEmpty())]
		[for (parameter : SelectionParameter | f.selection.parameters) separator(', ')]
$[parameter.name/][/for], [/if]
[/if]
[if (unit.pagination.oclIsUndefined())]
NULL[else]$this->page[/if], [unit.defaultPaginationSize/]
[/template]


[template private templateParameters(unit : IndexUnit) post(trim())]
[if (unit.pageDisplayedOn().units->size() > 1)]
$this->[unit.selectName()/]([if (unit.hasFilterParameters())]$request[/if]);
[/if]
$parameters['['/]'[unit.instanceName()/]'[']'/] = $this->[unit.instanceName()/];
[if (not unit.pagination.oclIsUndefined())]
$parameters['['/]'currentPage'[']'/] = $this->page;
$parameters['['/]'pageCount'[']'/] = ceil($this->[unit.instanceName()/]->count() / [unit.defaultPaginationSize/]);
[/if]
[/template]
