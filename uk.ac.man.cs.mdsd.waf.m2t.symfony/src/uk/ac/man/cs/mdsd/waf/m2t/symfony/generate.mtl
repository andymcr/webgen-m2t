[comment encoding = UTF-8 /]
[module generate(
	'http://cs.manchester.ac.uk/mdsd/WebApplicationFramework')]
[import uk::ac::man::cs::mdsd::orm::m2t::core::dataTypes/]
[import uk::ac::man::cs::mdsd::waf::m2t::core::model/]
[import uk::ac::man::cs::mdsd::waf::m2t::core::security/]
[import uk::ac::man::cs::mdsd::waf::m2t::core::units/]
[import uk::ac::man::cs::mdsd::waf::m2t::core::css::generate/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::files/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::config::envDist/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::config::fosUser/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::config::framework/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::config::imagine/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::config::security/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::config::services/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::controllers::page/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::controllers::api/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::extensions::extensions/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::formTypes::authenticationType/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::formTypes::enumerationType/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::formTypes::formType/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::formTypes::unitType/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::security::changePasswordTemplate/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::security::fosTemplate/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::security::legacyEncoder/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::security::localAuthenticationModel/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::security::loginTemplate/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::security::resetRequestTemplate/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::security::resettingTemplate/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::services::service/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::templates::base/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::templates::details/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::templates::gallery/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::templates::imageIndex/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::templates::index/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::templates::input/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::templates::navigation/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::templates::page/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::templates::slider/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::templates::staticView/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::translations::entity/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::translations::section/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::translations::navigation/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::user::profileForm/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::user::registerForm/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::views::form::materialize/]


[template public symfony(model : WafModel)]
[model.configFramework()/]
[model.configServices()/]
[if (model.hasImageUnits())]
[model.configImagine()/]
[/if]
[model.configSecurity()/]
[if (model.isLocallyAuthenticated())]
[model.configFosUser()/]
[/if]

[model.business.services.service(model)/]

[model.persistence.enumerationTypes().formType()/]
[model.formTypes()/]
[model.pages->collect(p | p.units)->select(u | u.hasInterfaceFields()).oclAsType(DynamicUnit).formType()/]
[model.pages->select(p | p.units->notEmpty()).controller(model)/]

[if (model.hasAPI())]
[model.api.resources.controller(model)/]
[/if]

[model.navigation()/]
[model.generatePage()/]
[model.pages->select(p | p.units->notEmpty()).page()/]
[model.pages.units.unitView()/]
[model.formViews()/]

[model.entityTranslations()/]
[model.navigationTranslations()/]
[model.sectionsTranslations()/]


[if (model.isLocallyAuthenticated())]
[let authentication : LocalAuthenticationSystem = model.localAuthentication()]
[authentication.model()/]
[authentication.formTypes()/]
[authentication.encoder()/]

[authentication.layoutSecurity()/]
[authentication.changePasswordForm()/]
[authentication.loginForm()/]
[authentication.profileForm()/]
	[if (authentication.allowSelfRegistration)]
[authentication.registerForm()/]
	[/if]
[authentication.resetRequestForm()/]
[authentication.resettingForm()/]
[/let]
[elseif (model.isCasAuthenticated())]
[let authentication : CasAuthentication = model.casAuthentication()]
[/let]
[/if]

[model.css(model.cssDirectory())/]

[model.extensions()/]
[/template]
