[comment encoding = UTF-8 /]
[module detailsMethods(
	'http://www.cs.man.ac.uk/mdsd/2015/WebApplicationFramework')]
[import uk::ac::man::cs::mdsd::waf::m2t::core::featureProperties/]
[import uk::ac::man::cs::mdsd::waf::m2t::core::files/]
[import uk::ac::man::cs::mdsd::waf::m2t::core::uriRoutes/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::files/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::names/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::controllers::commonMethods/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::expression::criteriaDoctrine/]


[template public unitMethods(unit : ContentUnit)
	? (unit.oclIsTypeOf(DetailsUnit)) post(trim())]
[let detailsUnit : DetailsUnit = unit.oclAsType(DetailsUnit)]
[detailsUnit.actionMethod()/]

[for (action : InlineAction | detailsUnit.uriActions())]
[comment action.generateActionMethod('$this->'.concat(detailsUnit.instanceName()).concat('_error'))/]

[/for]
[/let]
[/template]

[template private actionMethod(unit : DetailsUnit) post(trim())]
[let page : Page = unit.pageDisplayedOn()]
/**
 [unit.routeAnnotation()/]
 */
public function [unit.actionName()/]([unit.actionMethodParameters()/])
{
    [unit.loadSelectedInstance()/]

[if (page.units->size() > 1)]
    return $this->renderPage([page.renderActualParameters(unit)/]);
[else]
    $parameters = array();
    [page.templateParameters()/]
    [unit.templateParameters()/]
    return $this->render('[page.name/]/page[page.htmlExtension()/][page.twigExtension()/]', $parameters);
[/if]
}
[/let]
[/template]

[template private templateParameters(unit : ContentUnit)
	? (unit.oclIsKindOf(DetailsUnit)) post(trim())]
[let page : Page = unit.pageDisplayedOn()]
[let detailsUnit : DetailsUnit = unit.oclAsType(DetailsUnit)]
[if (page.units->size() = 1)]
$parameters['['/]'[detailsUnit.instanceName()/]'[']'/] = $this->[detailsUnit.instanceName()/];
[else]
	[if (detailsUnit.onlyDisplayWhenNotEmpty)]
if (isset($this->[detailsUnit.instanceName()/]))
    $parameters['['/]'[detailsUnit.instanceName()/]'[']'/] = $this->[detailsUnit.instanceName()/];
	[else]
if (!isset($this->[detailsUnit.instanceName()/]))
		[if (not detailsUnit.defaultSelection.oclIsUndefined())]
    $this->[detailsUnit.instanceName()/] = [detailsUnit.getService()/]->[detailsUnit.defaultSelection.methodName()/]();
		[elseif (page.uriCommonPathKeys()->includesAll(unit.uriPathKeys()))]
    $this->[detailsUnit.instanceName()/] = [detailsUnit.loadFilteredInstance()/];
		[else]
    $this->[detailsUnit.instanceName()/] = [detailsUnit.createInstance()/];
		[/if]
$parameters['['/]'[detailsUnit.instanceName()/]'[']'/] = $this->[detailsUnit.instanceName()/];
	[/if]
[/if]
[/let]
[/let]
[/template]