[comment encoding = UTF-8 /]
[module detailsMethods(
	'http://cs.manchester.ac.uk/mdsd/ObjectRelationalMapping',
	'http://cs.manchester.ac.uk/mdsd/WebApplicationFramework')]
[import uk::ac::man::cs::mdsd::waf::m2t::core::actions/]
[import uk::ac::man::cs::mdsd::waf::m2t::core::files/]
[import uk::ac::man::cs::mdsd::waf::m2t::core::interface/]
[import uk::ac::man::cs::mdsd::waf::m2t::core::units/]
[import uk::ac::man::cs::mdsd::waf::m2t::core::uriRoutes/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::featureProperties/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::actions/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::names/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::uriRoutes/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::controllers::annotations/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::controllers::commonMethods/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::expression::criteriaDoctrine/]


[template public unitMethods(unit : ContentUnit)
	? (unit.oclIsTypeOf(DetailsUnit)) post(trim())]
[let detailsUnit : DetailsUnit = unit.oclAsType(DetailsUnit)]
[detailsUnit.actionMethod()/]

[for (action : InlineAction | detailsUnit.fieldSelectActions())]
[comment action.generateActionMethod('$this->'.concat(detailsUnit.instanceName()).concat('_error'))/]

[/for]
[/let]
[/template]

[template private actionMethod(unit : DetailsUnit) post(trim())]
[let page : Page = unit.pageDisplayedOn()]
/**
 [unit.routeAnnotation()/]
[if (unit.requiresRole <> '')]
 [unit.securityAnnotation()/]
[/if]
 */
public function [unit.actionName()/]([unit.actionMethodParameters(unit.routingType(), false)/])
{
[if (unit.isConditionalDisplay())]
    [unit.actionCore()/]

[/if]
    return $this->renderPage([page.renderActualParameters(unit.routingType())/]);
}
[/let]
[/template]

[template public actionCore(unit : ContentUnit)
	? (unit.oclIsTypeOf(DetailsUnit)) post(trim())]
[let detailsUnit : DetailsUnit = unit.oclAsType(DetailsUnit)]
[if (detailsUnit.defaultSelection.oclIsUndefined())]
$this->[detailsUnit.instanceName()/] = [detailsUnit.loadInstance(detailsUnit.routingType(), false)/];
if (!$this->[detailsUnit.instanceName()/]) {
    throw $this->createNotFoundException('The [detailsUnit.routingType().name/] does not exist');
}
[else]
$this->[detailsUnit.instanceName()/] = [detailsUnit.getContentService()/]->[detailsUnit.defaultSelection.methodName/]();
[/if]
[/let]
[/template]

[template private templateParameters(unit : ContentUnit)
	? (unit.oclIsKindOf(DetailsUnit)) post(trim())]
[let page : Page = unit.pageDisplayedOn()]
[let detailsUnit : DetailsUnit = unit.oclAsType(DetailsUnit)]
[if (detailsUnit.isConditionalDisplay())]
if (isset($this->[detailsUnit.instanceName()/]))
    $parameters['['/]'[detailsUnit.instanceName()/]'[']'/] = $this->[detailsUnit.instanceName()/];
[else]
	[if (not page.hasSingleActionMethod()) ]
[unit.actionCore()/]
	[/if]
$parameters['['/]'[detailsUnit.instanceName()/]'[']'/] = $this->[detailsUnit.instanceName()/];
[/if]
[/let]
[/let]
[/template]