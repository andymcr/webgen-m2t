[comment encoding = UTF-8 /]
[module detailsMethods(
	'http://www.cs.man.ac.uk/mdsd/2015/WebApplicationFramework')]
[import uk::ac::man::cs::mdsd::waf::m2t::core::featureProperties/]
[import uk::ac::man::cs::mdsd::waf::m2t::core::files/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::names/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::uriRoutes/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::controllers::commonMethods/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::criteria::criteriaDoctrine/]


[template public unitMethods(unit : ContentUnit)
	? (unit.oclIsTypeOf(DetailsUnit)) post(trim())]
[let detailsUnit : DetailsUnit = unit.oclAsType(DetailsUnit)]
[detailsUnit.actionMethod()/]

[for (action : InlineAction | detailsUnit.uriActions())]
[comment action.generateActionMethod('$this->'.concat(detailsUnit.instanceName()).concat('_error'))/]

[/for]
[/let]
[/template]

[template private actionMethod(unit : DetailsUnit) post(trim())]
/**
 * [unit.routeAnnotation()/]
 */
public function [unit.actionName()/]([if (unit.hasFilterParameters())]
Request $request[if (unit.service.keys->notEmpty())], [/if][/if][unit.service.routeParameters()/])
{
    $this->[unit.instanceName()/] = [unit.loadInstance()/];

    return $this->renderPage();
}
[/template]

[template private templateParameters(unit : ContentUnit)
	? (unit.oclIsKindOf(DetailsUnit)) post(trim())]
[let detailsUnit : DetailsUnit = unit.oclAsType(DetailsUnit)]
[if (detailsUnit.onlyDisplayWhenNotEmpty)]
if (isset($this->[detailsUnit.instanceName()/]))
    $parameters['['/]'[detailsUnit.instanceName()/]'[']'/] = $this->[detailsUnit.instanceName()/];
[else]
if (!isset($this->[detailsUnit.instanceName()/]))
    $this->[detailsUnit.instanceName()/] = [detailsUnit.createInstance()/]
$parameters['['/]'[unit.instanceName()/]'[']'/] = $this->[unit.instanceName()/];
[/if]
[/let]
[/template]