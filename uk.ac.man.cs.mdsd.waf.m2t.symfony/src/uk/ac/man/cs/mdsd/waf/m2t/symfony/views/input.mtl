[comment encoding = UTF-8 /]
[module input(
	'http://www.cs.man.ac.uk/mdsd/2010/ObjectRelationalMapping',
	'http://www.cs.man.ac.uk/mdsd/2015/WebApplicationFramework')]
[import uk::ac::man::cs::mdsd::orm::m2t::core::featureProperties/]
[import uk::ac::man::cs::mdsd::waf::m2t::core::featureProperties/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::files/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::names/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::uriRoutes/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::views::display/]


[template public unitView(unit : ContentUnit)
	? (unit.oclIsKindOf(EditUnit) or unit.oclIsKindOf(ControlUnit) and not unit.oclIsTypeOf(SearchUnit)) post(trim())]
[file(unit.viewFilename(), false)]
[let dynamicUnit : DynamicUnit = unit.oclAsType(DynamicUnit)]
[let accessor : String = '$'.concat(dynamicUnit.instanceName())]
<section class="[dynamicUnit.styleClass/]{%if [dynamicUnit.errorName()/] is defined %} [dynamicUnit.errorClass/]{% endif %}" id="[dynamicUnit.instanceName()/]">
 <h1 class="[dynamicUnit.captionClass/][if (dynamicUnit.omitCaption)] hidden[/if]">[unit.displayLabel/]</h1>
 <div class="unit_padding">
  <section class="[dynamicUnit.errorClass/]{% if not [dynamicUnit.errorName()/] is defined %} hidden{% endif %}">
{% if [dynamicUnit.errorName()/] is defined %}
   <p class="[dynamicUnit.errorClass/]">{{ [dynamicUnit.errorName()/] }}</p>
{% endif %}
[if (dynamicUnit.hasMessagesOnFormHead())]
   [dynamicUnit.formErrors()/]
[/if]
  </section>
[if (dynamicUnit.hasInterfaceFields())]
  <?php
	$unit_fields = $[dynamicUnit.instanceName()/]->unit_fields();
?>
[/if]
[if (unit.oclIsTypeOf(MapUnit))]
  [dynamicUnit.map()/]
[else]
  [dynamicUnit.form(accessor)/]
[/if]
 </div>
</section>
[/let]
[/let]
[/file]
[/template]

[template public unitView(unit : ContentUnit)
	? (unit.oclIsTypeOf(SearchUnit)) post(trim())]
[file(unit.viewFilename(), false)]
[let dynamicUnit : DynamicUnit = unit.oclAsType(DynamicUnit)]
[let accessor : String = '$'.concat(dynamicUnit.instanceName())]
<section class="[dynamicUnit.styleClass/]{%if [dynamicUnit.errorName()/] is defined %} [dynamicUnit.errorClass/]{% endif %}" id="[dynamicUnit.instanceName()/]">
 <h1 class="[dynamicUnit.captionClass/][if (dynamicUnit.omitCaption)] hidden[/if]">[unit.displayLabel/]</h1>
 <div class="unit_padding">
  <section class="[dynamicUnit.errorClass/]<?php if (empty($[dynamicUnit.errorName()/])[if (dynamicUnit.hasMessagesOnFormHead())] && empty($field_errors)[/if]) echo ' hidden'; ?>">
{% if [dynamicUnit.errorName()/] is defined %}
   <p class="[dynamicUnit.errorClass/]">{{ [dynamicUnit.errorName()/] }}</p>
{% endif %}
[if (dynamicUnit.hasMessagesOnFormHead())]
   [dynamicUnit.formErrors()/]
[/if]
  </section>
[if (dynamicUnit.hasInterfaceFields())]
  <?php
	$unit_fields = [accessor/]->unit_fields();
?>
[/if]
[dynamicUnit.form(accessor)/]
 </div>
</section>
[/let]
[/let]
[/file]
[/template]


[template private form(unit : DynamicUnit, accessor : String) post(trim())]
[unit.formOpen(accessor)/]
[for (field : UnitField | unit.inputOrEmbeddedFields())]
 [field.formField(unit)/]
[/for]
[unit.formControlAndClose()/]
[/template]

[template private formOpen(unit : DynamicUnit, accessor : String) post(trim())]
{% form_theme [unit.instanceName()/] 'form/messages_on_fields.html.twig' %}
{{ form_start([unit.instanceName()/]) }}
[/template]

[template private formControlAndClose(unit : DynamicUnit) post(trim())]
<div class="[unit.controlClass/]">
 <input type="submit" name="save" value="[unit.submitLabel()/]"/>
[if (unit.oclIsKindOf(EditUnit))]
[let editUnit : EditUnit = unit.oclAsType(EditUnit)]
	[if (editUnit.oclIsTypeOf(CreateUpdateUnit))]
	[let createUpdateUnit : CreateUpdateUnit = editUnit.oclAsType(CreateUpdateUnit)]
		[if (not createUpdateUnit.clearLabel.oclIsUndefined())]
 <input type="submit" name="save" value="[createUpdateUnit.clearLabel/]"/>
		[/if]
	[/let]
	[/if]
	[if (not editUnit.cancelDestination.oclIsUndefined())]
 <input type="submit" name="save" value="[editUnit.cancelLabel/]"/>
	[/if]
[/let]
[/if]
</div>
{{ form_row([unit.instanceName()/]._token) }}
{{ form_end([unit.instanceName()/], {'render_rest': false}) }}
[/template]

[template private formField(field : UnitField, unit : DynamicUnit) post(trim())]
[let accessor : String = '$'.concat(unit.instanceName()).concat('->').concat(field.modelPropertyName())]
[if (if not field.oclIsKindOf(UnitAssociation) then true else field.oclAsType(UnitAssociation).units->isEmpty() endif)]
{{ form_row([unit.instanceName()/].[field.modelPropertyName()/], { 'attr': { 'class': '[field.inputClass()/]'}}) }}
[else]
[let embeddedUnit : ContentUnit = field.oclAsType(UnitAssociation).units->first()]
<p class="[field.modelPropertyName()/]">[field.displayLabel()/]</p>
<?php $[field.uniqueName()/] = $[unit.instanceName()/]->[field.modelPropertyName()/]->[if (not embeddedUnit.oclIsKindOf(IndexUnit))]
find()[else][let embeddedIndexUnit : IndexUnit = embeddedUnit.oclAsType(IndexUnit)]
[if (embeddedIndexUnit.defaultSelection.oclIsUndefined())]
find_all()[else]
[embeddedIndexUnit.defaultSelection.instanceName()/](FALSE)[/if][/let][/if];
?>
     <div class="framed [field.modelPropertyName()/]">
      [field.oclAsType(UnitAssociation).units.viewContent(field.uniqueName())/]
     </div>
[/let]
[/if]
[/let]
[/template]

[template public map(unit : DynamicUnit)]
[let mapUnit : MapUnit = unit.oclAsType(MapUnit)]
<div id="[unit.uniqueName()/]">
 <?php
	echo Form::input('[mapUnit.uniqueName()/]_autocomplete', NULL,
		array(
			'id' => '[mapUnit.uniqueName()/]_autocomplete',
//			'class' => 'field.styleClass()/] field.inputClass()/]',
	)) . PHP_EOL;
?>
 <div id="[mapUnit.uniqueName()/]_map" class="map-canvas"></div>
 <script src="//code.jquery.com/jquery-2.1.1.min.js"></script>
 <script>
var map;
[if (not mapUnit.readOnly)]
var marker;
var infoWindow;
var autocomplete;
var geocoder;
[/if]

function initialize() {
	var mapOptions = {
		zoom: 12
	};
	map = new google.maps.Map(document.getElementById('[unit.uniqueName()/]_map'), mapOptions);
[if (mapUnit.readOnly)]
[else]
	input = document.getElementById('[unit.uniqueName()/]_autocomplete');
	map.controls['['/]google.maps.ControlPosition.TOP_LEFT[']'/].push(input);
	marker = new google.maps.Marker();
	infoWindow = new google.maps.InfoWindow();
	autocomplete = new google.maps.places.Autocomplete(input);
	autocomplete.bindTo('bounds', map);
	geocoder = new google.maps.Geocoder();

	if(navigator.geolocation) {
		navigator.geolocation.getCurrentPosition(
			function(position) {
				map.setCenter(new google.maps.LatLng(
					position.coords.latitude, position.coords.longitude));
			},
			function() {
				handleNoGeolocation(true);
		});
	} else {
		handleNoGeolocation(false);
	}

	google.maps.event.addListener(map, 'click', function(event) {
		geocoder.geocode({'latLng': event.latLng}, function(results, status) {
			if (status == google.maps.GeocoderStatus.OK) {
				if (results['['/]1[']'/]) {
					var contentString = $('<div class="marker-info-win">' +
						'<p class="place-address">' + results['['/]1[']'/].formatted_address + '</p>' +
						'<?php
							echo Form::button('[mapUnit.instanceName()/]', '[mapUnit.submitLabel()/]', array(
								'type' => 'submit',
								'class' => 'save-marker'
							));
						?></div>');    
					showPlace(results['['/]1[']'/].formatted_address, event.latLng, contentString);
 				} else {
					setMarker(event.latLng);
				}
			} else {
				setMarker(event.latLng);
			}
		});
	});

	google.maps.event.addListener(autocomplete, 'place_changed', function() {
		var place = autocomplete.getPlace();
		if (place.geometry) {
			var contentString = $('<div class="marker-info-win">' +
				'<h1 class="place-name">' + place.name + '</h1>' +
				'<p class="place-address">' + place.formatted_address + '</p>' +
				'<?php
					echo Form::button('[mapUnit.instanceName()/]', '[mapUnit.submitLabel()/]', array(
						'type' => 'submit',
						'class' => 'save-marker'
					));
				?></div>');    
			showPlace(place.name, place.geometry.location, contentString);
		} else {
			document.getElementById('[mapUnit.uniqueName()/]_input').placeholder = 'Enter a location';
		}
	});
}

function setMarker(latLng) {
	marker.setMap(map);
	marker.setPosition(latLng);
}

function showPlace(name, latLng, contentString) {
	infoWindow.setContent(contentString['['/]0[']'/]);
	infoWindow.setPosition(latLng);
	infoWindow.set('name', name);
	infoWindow.open(map);
  
  	var saveBtn = contentString.find('button.save-marker')['['/]0[']'/];
		
	if(typeof saveBtn !== 'undefined') {
		google.maps.event.addDomListener(saveBtn, 'click', function(event) {
			saveMarker();
		});
	}
}

function saveMarker() {
	var myData = {
[if (not mapUnit.placeName.oclIsUndefined())]
		[mapUnit.placeName.modelPropertyName()/]: infoWindow.get('name'),
[/if]
		[mapUnit.location.modelPropertyName()/]_latitude: infoWindow.getPosition().lat(),
		[mapUnit.location.modelPropertyName()/]_longitude: infoWindow.getPosition().lng()
	};
	$.ajax({
		type: "POST",
		url: "<?php
			echo Route::get('[mapUnit.displayedOn.oclAsType(Page).routeName()/]')->uri(array(
				'action' => '[mapUnit.actionName()/]',
				'param' => 'submit'
			));
?>",
		data: myData,
		success: function(data) {
			marker.setMap(map);
			marker.setPosition(infoWindow.getPosition());
			infoWindow.close();
		},
		error: function(xhr, ajaxOptions, thrownError) {
			alert(thrownError);
		}
	});
}

function handleNoGeolocation(errorFlag) {
  if (errorFlag) {
    var content = 'Error: The Geolocation service failed.';
  } else {
    var content = 'Error: Your browser doesn\'t support geolocation.';
  }

  var options = {
    map: map,
    position: new google.maps.LatLng(60, 105),
    content: content
  };

  var infowindow = new google.maps.InfoWindow(options);
  map.setCenter(options.position);
[/if]
}

google.maps.event.addDomListener(window, 'load', initialize);
 </script>
</div>
[/let]
[/template]


[template private inputField(field : UnitField, accessor : String)
	? (field.isObfuscated()) post(trim())]
<?php
    echo Form::password('[field.modelPropertyName()/]', [field.getValue(accessor)/], array(
        'id' => '[field.uniqueName()/]',
        'class' => '[field.styleClass()/] [field.inputClass()/]',
[if (field.isRequired() and not field.displayedOn.oclIsTypeOf(SearchUnit))]
        'required' => ''
[/if]
    )) . PHP_EOL;
?>
[/template]

[template private inputField(field : UnitField, accessor : String)
	? (field.isBooleanDataType() and not field.isObfuscated()) post(trim())]
<?php
    echo Form::hidden('[field.modelPropertyName()/]', '0') .PHP_EOL;
    echo Form::checkbox('[field.modelPropertyName()/]', '1', [field.getValue(accessor)/], array(
        'id' => '[field.uniqueName()/]',
        'class' => '[field.styleClass()/] [field.inputClass()/]',
[if (field.isRequired() and not field.displayedOn.oclIsTypeOf(SearchUnit))]
        'required' => ''
[/if]
    )) . PHP_EOL;
?>
[/template]

[template private inputField(field : UnitField, instanceVariable : String)
	? ((field.isDataTypeSingleton() or field.oclIsTypeOf(DataTypeField)) and not field.isBooleanDataType() and not field.isObfuscated()) post(trim())]
[let dataType : DataType = 
	if field.oclIsTypeOf(UnitElement) then
		field.oclAsType(UnitElement).serviceFeature.attribute.oclAsType(SingletonElement).dataType
	else
		field.oclAsType(DataTypeField).dataType
	endif]
[if (dataType.name = 'TextBlock')]
[if (not field.pageDisplayedOn().partOf.textEditorURL.oclIsUndefined())]
<div class="[field.modelPropertyName()/] [field.inputClass()/]">
[/if]
 <textarea id="[field.uniqueName()/]" name="[field.formName()/]"[if (dataType.name <> 'String')]
 type="[dataType.name.toLower()/]" [/if][if (field.pageDisplayedOn().partOf.textEditorURL.oclIsUndefined())]
class="full_width"[else]
class="[field.styleClass()/] [field.inputClass()/]"[/if][if (field.isRequired() and not field.displayedOn.oclIsTypeOf(SearchUnit))]
 required="required"[/if]/>
<!--
	echo Form::textarea('', [if (field.oclIsKindOf(DataTypeField))]
array_key_exists('[field.modelPropertyName()/]', $unit_fields) ? $unit_fields['['/]'[field.modelPropertyName()/]'[']'/] : NULL[else]
[instanceVariable/][/if], -->
[if (not field.pageDisplayedOn().partOf.textEditorURL.oclIsUndefined())]
 <script>CKEDITOR.replace('[field.uniqueName()/]');</script>
</div>
[/if]
[else]
<input id="[field.uniqueName()/]" name="[field.formName()/]"[if (dataType.name <> 'String')]
 type="[dataType.name.toLower()/]" [/if]class="[field.styleClass()/] [field.inputClass()/]"[if (field.isRequired() and not field.displayedOn.oclIsTypeOf(SearchUnit))]
 required="required"[/if]/>
[/if]
[/let]
[/template]

[template private inputField(field : UnitField, accessor : String)
	? (field.isEnumerationTypeSingleton()) post(trim())]
[let enumerationType : EnumerationType
	= field.oclAsType(UnitElement).serviceFeature.enumerationType()]
<select id="[field.uniqueName()/]" name="[field.formName()/]" class="[field.styleClass()/] [field.inputClass()/]"[if (field.isRequired() and not field.displayedOn.oclIsTypeOf(SearchUnit))]
 required=""[/if]>
(% foreach option in [enumerationType.modelClassName()/]::values([field.isRequired()/])%}
<option value="x">y</option>
{% endforeach %}
</select>
[/let]
[/template]

[template private inputField(field : UnitField, accessor : String)
	? (field.isDateSingleton() or field.oclIsTypeOf(DateField)) post(trim())]
[let dateDetails : DateDetails
	= if field.isDateSingleton() then
			field.oclAsType(UnitElement).serviceFeature.attribute.oclAsType(SingletonDate).details
		else
			field.oclAsType(DateField).details
		endif]
<?php
    echo Form::input('[field.modelPropertyName()/]', [if (field.oclIsKindOf(UnitFeature))]
[accessor/][else]
array_key_exists('[field.modelPropertyName()/]', $unit_fields) ? $unit_fields['['/]'[field.modelPropertyName()/]'[']'/] : NULL[/if],
        array(
            'id' => '[field.uniqueName()/]',
            'class' => '[field.styleClass()/] [field.inputClass()/]',
[if (field.isRequired() and not field.displayedOn.oclIsTypeOf(SearchUnit))]
            'required' => '',
[/if]
            'type' => '[if (dateDetails = DateDetails::DateOnly)]date[elseif (dateDetails = DateDetails::TimeOnly)]time[else]datetime[/if]'
    )) . PHP_EOL;
?>
[/let]
[/template]

[template private inputField(field : UnitField, instanceVariable : String)
	? (field.isResourceSingleton()) post(trim())]
[let resource : SingletonResource = field.oclAsType(UnitElement).serviceFeature.attribute.oclAsType(SingletonResource)]
<?php
	echo Form::file('[field.modelPropertyName()/]',
		array(
			'id' => '[field.uniqueName()/]',
			'class' => '[field.styleClass()/] [field.inputClass()/]',
[if (field.isRequired() and not field.displayedOn.oclIsTypeOf(SearchUnit))]
			'required' => '',
[/if]
	[if (resource.validUploadMimeTypes->notEmpty())]
			'accept' => '[resource.validUploadMimeTypes->first()/]', // array([for (type : String | resource.validUploadMimeTypes) separator(', ')]'[type/]'[/for]),
	[/if]
	)) . PHP_EOL;
?>
[/let]
[/template]

[template private inputField(field : UnitField, instanceVariable : String)
	? (field.oclIsTypeOf(UnitElement) and not field.isSingleton()) post(trim())]
echo form_input('[field.modelPropertyName()/]');
[/template]

[template private inputField(field : UnitField, accessor : String)
	? (field.oclIsKindOf(UnitAssociation)) post(trim())]
<select id="[field.uniqueName()/]" name="[field.formName()/][if (not field.isSingleton())]['['/][']'/][/if]" class="[field.styleClass()/] [field.inputClass()/]"[if (not field.isSingleton())]
 multiple="multiple"[/if][if (field.isRequired() and not field.displayedOn.oclIsTypeOf(SearchUnit))]
 required="required"[/if]>
(% foreach option in [field.optionsName()/] %}
<option value="{{ option.id }}">{{ option.defaulltLabel() }}</option>
{% endforeach %}
</select>
[/template]

[template private inputField(field : UnitField, instanceVariable : String)
	? (field.oclIsTypeOf(CaptchaField)) post(trim())]
<div class="g-recaptcha" data-sitekey="[field.displayedOn.pageDisplayedOn().partOf.captchaSiteKey/]"></div>
<noscript>
<div style="width: 302px; height: 352px;">
 <div style="width: 302px; height: 352px; position: relative;">
  <div style="width: 302px; height: 352px; position: absolute;">
   <iframe src="https://www.google.com/recaptcha/api/fallback?k=[field.displayedOn.pageDisplayedOn().partOf.captchaSiteKey/]"
                frameborder="0" scrolling="no"
                style="width: 302px; height:352px; border-style: none;">
   </iframe>
  </div>
  <div style="width: 250px; height: 80px; position: absolute; border-style: none;
                  bottom: 21px; left: 25px; margin: 0px; padding: 0px; right: 25px;">
   <textarea id="g-recaptcha-response" name="g-recaptcha-response"
                  class="g-recaptcha-response"
                  style="width: 250px; height: 80px; border: 1px solid #c1c1c1;
                         margin: 0px; padding: 0px; resize: none;" value="">
   </textarea>
  </div>
 </div>
</div>
</noscript>
[/template]


[template private formErrors(unit : DynamicUnit) post(trim())]
<?php
	if ( isset($[unit.fieldErrorsName()/])) {
		foreach ($[unit.fieldErrorsName()/] AS $field => $message) {
?>
<p class="[unit.errorClass/]"><?php echo __($message); ?></p>
<?php
		}
	} 
?>
[/template]