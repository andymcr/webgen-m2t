[comment encoding = UTF-8 /]
[module imageIndex(
	'http://cs.manchester.ac.uk/mdsd/ObjectRelationalMapping',
	'http://cs.manchester.ac.uk/mdsd/WebApplicationFramework')]
[import uk::ac::man::cs::mdsd::waf::m2t::core::actions/]
[import uk::ac::man::cs::mdsd::waf::m2t::core::featureProperties/]
[import uk::ac::man::cs::mdsd::waf::m2t::core::interface/]
[import uk::ac::man::cs::mdsd::waf::m2t::core::translation/]
[import uk::ac::man::cs::mdsd::waf::m2t::core::units/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::files/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::names/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::expression::twig/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::templates::accessor/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::templates::action/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::templates::display/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::templates::image/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::templates::labels/]


[template public unitView(unit : ContentUnit)
	? (unit.oclIsTypeOf(ImageIndexUnit)) post(trim())]
[file(unit.viewFilename(), false)]
{% trans_default_domain "entity" %}
<section class="[unit.styleClass/]" id="[unit.instanceName()/]">
[if (not unit.omitCaption)]
 <h4 class="[unit.captionClass/]">[unit.displayLabel/]</h4>
[/if]
 <div class="row">
  [unit.unitContent(null, unit.instanceName(), 0)/]
 </div>
</section>
[/file]
[/template]

[template public unitContent(unit : ContentUnit, nullDisplayValue : String, accessor : String, depthIndex : Integer)
	? (unit.oclIsTypeOf(ImageIndexUnit)) post(trim())]
[let imageUnit : ImageIndexUnit = unit.oclAsType(ImageIndexUnit)]
[let variable : String = imageUnit.contentType().instanceName()]
{% for [variable/] in [accessor/] %}
<div class="[imageUnit.columnClass/]">
 <div class="[imageUnit.contentClass/]">
  [imageUnit.image(variable)/]
[if (not imageUnit.overlayTitle and not imageUnit.titleFeature.oclIsUndefined() or imageUnit.displayFields->notEmpty())]
  [imageUnit.content(variable, depthIndex)/]
[/if]
[if (imageUnit.hasInlineActions())]
  [imageUnit.actions(variable)/]
[/if]
 </div>
</div>
{% endfor %}
[/let]
[/let]
[/template]

[template private image(unit : ImageIndexUnit, variable : String) post(trim())]
<div class="card-image">
 [unit.indexImage(variable)/]
[if (unit.overlayTitle and not unit.titleFeature.oclIsUndefined())]
 <span class="card-title[if (unit.truncateTitle)] truncate[/if]">{{ [unit.titleFeature.accessor(variable)/] }}</span>
[/if]
</div>
[/template]

[template private indexImage(unit : ImageIndexUnit, accessor : String) post(trim())]
[if (unit.imagePathFeature.oclIsUndefined())]
[unit.imageMissing(null, accessor, false)/]
[else]
[unit.imagePathFeature.imagePath(unit, accessor, accessor, false)/]
[/if]
[/template]

[template private content(unit : ImageIndexUnit, variable : String, depthIndex : Integer) post(trim())]
<div class="card-content">
	[if (not unit.overlayTitle and not unit.titleFeature.oclIsUndefined())]
 <span class="card-title[if (unit.truncateTitle)] truncate[/if]">{{ [unit.titleFeature.accessor(variable)/][unit.titleFeature.valueLabel()/] }}</span>
	[/if]
	[for (field : UnitField | unit.displayFields)]
		[if (field.isConditionalDisplay())]
{%- if not ([field.hideWhen.twigExpression(variable)/]) %}
		[/if]
 <p>[if (not unit.omitFieldLabels)]
[if (field.hasCustomisedLabel())]
{{ '[unit.containedId()/].labels.[field.labelId()/]' | trans({}, '[unit.translationDomain()/]') }}[else]
{{ '[unit.contentType().id()/].labels.[field.labelId()/]' | trans }}[/if]: [/if]
[field.displayValue(variable, true, depthIndex)/]</p>
		[if (field.isConditionalDisplay())]
{%- endif %}
		[/if]
	[/for]
</div>
[/template]

[template private actions(unit : ImageIndexUnit, variable : String) post(trim())]
<div class="card-action">
[for (action : InlineAction | unit.inlineActions())]
	[if (unit.hasObjectAccess())]
 [action.actionLink(unit.contentType(), unit, variable, action.displayLabel, variable.concat('.defaultLabel()'), variable, unit.hasObjectAccess())/]
	[else]
 [action.actionLink(unit.contentType(), unit, variable, action.displayLabel, null, variable, unit.hasObjectAccess())/]
	[/if]
[/for]
</div>
[/template]
