[comment encoding = UTF-8 /]
[module dataTypes(
	'http://cs.manchester.ac.uk/mdsd/Expression',
	'http://cs.manchester.ac.uk/mdsd/ObjectRelationalMapping')]


[query public enumerationTypes(model : OrmModel) : Sequence(EnumerationType)
	= model.dataTypes->select(t | t.oclIsKindOf(EnumerationType)).oclAsType(EnumerationType)
/]


[query public isBooleanDataType(dataType : DataType) : Boolean
	= dataType.name = 'Boolean'
/]

[query public isIntegerDataType(dataType : DataType) : Boolean
	= dataType.name = 'Integer'
/]

[query public isStringDataType(dataType : DataType) : Boolean
	= dataType.name = 'String'
/]


[query public dataType(feature : Feature) : Classifier
	= if feature.oclIsTypeOf(SingletonElement) then
			feature.oclAsType(SingletonElement).dataType
		else if feature.oclIsTypeOf(CollectionElement) then
			feature.oclAsType(CollectionElement).collectionType.elementType
		else
			null
		endif endif
/]

[query public dateDetails(feature : Feature) : DateDetails
	= if feature.oclIsKindOf(DateAttribute) then
			feature.oclAsType(DateAttribute).details
		else
			null
		endif
/]

[query public enumerationType(feature : Feature) : EnumerationType
	= if feature.oclIsKindOf(SingletonElement) then
			feature.oclAsType(SingletonElement).dataType.oclAsType(EnumerationType)
		else
			null
		endif
/]

[query public isBooleanDataType(feature : Feature) : Boolean
	= if not feature.oclIsTypeOf(SingletonElement) then
			false
		else
			let singleton : SingletonElement
				= feature.oclAsType(SingletonElement)
				in singleton.dataType.isBooleanDataType()
		endif
/]

[query public isDataType(feature : Feature) : Boolean
	= feature.oclIsTypeOf(SingletonElement) or feature.oclIsTypeOf(CollectionElement)
/]

[query public isDate(feature : Feature) : Boolean
	= feature.oclIsKindOf(DateAttribute)
/]

[query public isEnumerationType(feature : Feature) : Boolean
	= if not feature.oclIsKindOf(SingletonElement) then
			false
		else let element : SingletonElement = feature.oclAsType(SingletonElement)
			in element.dataType.oclIsTypeOf(EnumerationType)
		endif
/]

[query public isIntegerDataType(feature : Feature) : Boolean
	= if not feature.oclIsTypeOf(SingletonElement) then
			false
		else
			let singleton : SingletonElement
				= feature.oclAsType(SingletonElement)
				in singleton.dataType.isIntegerDataType()
		endif
/]

[query public isLocation(feature : Feature) : Boolean
	= feature.oclIsTypeOf(SingletonLocation)
/]

[query public isResource(feature : Feature) : Boolean
	= feature.oclIsKindOf(SingletonResource)
/]

[query public isStringDataType(feature : Feature) : Boolean
	= if not feature.oclIsTypeOf(SingletonElement) then
			false
		else
			let singleton : SingletonElement
				= feature.oclAsType(SingletonElement)
				in singleton.dataType.isStringDataType()
		endif
/]

[query public isUrl(feature : Feature) : Boolean
	= feature.oclIsTypeOf(SingletonURL)
/]
